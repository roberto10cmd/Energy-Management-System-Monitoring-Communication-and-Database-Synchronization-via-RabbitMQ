{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robert\\\\WebstormProjects\\\\untitled\\\\src\\\\ClientPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ClientStyle.css';\nimport axios from 'axios';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientPage = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [error, setError] = useState('');\n  const userId = localStorage.getItem('userId'); // Obține ID-ul utilizatorului\n\n  useEffect(() => {\n    const fetchDevices = async () => {\n      if (!userId) {\n        setError('User ID is not available'); // Mesaj de eroare dacă ID-ul utilizatorului nu este disponibil\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:8083/api/user_device/${userId}/owned_devices`);\n        setDevices(response.data); // Setează lista de dispozitive în stare\n        console.log(response.data); // Adaugă acest log pentru a vedea răspunsul de login\n      } catch (err) {\n        console.error(err);\n        setError('Failed to fetch devices');\n      }\n    };\n    fetchDevices();\n  }, [userId]); // Adaugă userId ca dependență\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Client Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"devices-title\",\n      children: \"Your Devices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), devices.length > 0 ? /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Consumption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: devices.map(device => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: device.consumption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this)]\n          }, device.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No devices found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) // Mesaj pentru cazurile fără dispozitive\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(ClientPage, \"vzvbizzUSM7k3YamKwCehXO4Jhs=\");\n_c = ClientPage;\nexport default ClientPage;\nvar _c;\n$RefreshReg$(_c, \"ClientPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","ClientPage","_s","devices","setDevices","error","setError","userId","localStorage","getItem","fetchDevices","response","get","data","console","log","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","component","map","device","description","address","consumption","id","_c","$RefreshReg$"],"sources":["C:/Users/robert/WebstormProjects/untitled/src/ClientPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './ClientStyle.css';\r\nimport axios from 'axios';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\r\n\r\nconst ClientPage = () => {\r\n    const [devices, setDevices] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const userId = localStorage.getItem('userId'); // Obține ID-ul utilizatorului\r\n\r\n    useEffect(() => {\r\n        const fetchDevices = async () => {\r\n            if (!userId) {\r\n                setError('User ID is not available'); // Mesaj de eroare dacă ID-ul utilizatorului nu este disponibil\r\n                return;\r\n            }\r\n            try {\r\n                const response = await axios.get(`http://localhost:8083/api/user_device/${userId}/owned_devices`);\r\n                setDevices(response.data); // Setează lista de dispozitive în stare\r\n                console.log(response.data);  // Adaugă acest log pentru a vedea răspunsul de login\r\n\r\n            } catch (err) {\r\n                console.error(err);\r\n                setError('Failed to fetch devices');\r\n            }\r\n        };\r\n\r\n        fetchDevices();\r\n    }, [userId]); // Adaugă userId ca dependență\r\n\r\n    return (\r\n        <div className=\"client-dashboard\">\r\n            <h2>Client Dashboard</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <h3 className=\"devices-title\">Your Devices</h3>\r\n            {devices.length > 0 ? (\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>Address</TableCell>\r\n                                <TableCell>Consumption</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {devices.map(device => (\r\n                                <TableRow key={device.id}>\r\n                                    <TableCell>{device.description}</TableCell>\r\n                                    <TableCell>{device.address}</TableCell>\r\n                                    <TableCell>{device.consumption}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            ) : (\r\n                <p>No devices found.</p> // Mesaj pentru cazurile fără dispozitive\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default ClientPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}