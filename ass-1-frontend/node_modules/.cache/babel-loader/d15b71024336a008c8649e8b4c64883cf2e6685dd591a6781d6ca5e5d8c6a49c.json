{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robert\\\\WebstormProjects\\\\untitled\\\\src\\\\ClientPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientPage = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchDevices = async () => {\n      const userId = localStorage.getItem('userId'); // Obține ID-ul utilizatorului\n      if (!userId) {\n        setError('User ID is not available');\n        return; // Oprește execuția dacă userId nu este disponibil\n      }\n      try {\n        // Asigură-te că URL-ul este corect și că ID-ul este trimis\n        const response = await axios.get(`http://localhost:8083/api/user_device/${userId}/owned_devices`);\n        setDevices(response.data); // Setează lista de dispozitive în stare\n      } catch (err) {\n        console.error('Failed to fetch devices', err);\n        setError('Failed to fetch devices');\n      }\n    };\n    fetchDevices();\n  }, []); // Array-ul de dependențe este gol, deci se va rula o singură dată la montare\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Client Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Devices:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.length > 0 ?\n      // Verificăm dacă există dispozitive\n      devices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: device.name\n      }, device.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this) // Afișează numele fiecărui dispozitiv\n      ) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No devices found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this) // Mesaj dacă nu sunt dispozitive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ClientPage, \"vzvbizzUSM7k3YamKwCehXO4Jhs=\");\n_c = ClientPage;\nexport default ClientPage;\nvar _c;\n$RefreshReg$(_c, \"ClientPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ClientPage","_s","devices","setDevices","error","setError","fetchDevices","userId","localStorage","getItem","response","get","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","device","name","id","_c","$RefreshReg$"],"sources":["C:/Users/robert/WebstormProjects/untitled/src/ClientPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ClientPage = () => {\r\n    const [devices, setDevices] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchDevices = async () => {\r\n            const userId = localStorage.getItem('userId'); // Obține ID-ul utilizatorului\r\n            if (!userId) {\r\n                setError('User ID is not available');\r\n                return; // Oprește execuția dacă userId nu este disponibil\r\n            }\r\n\r\n            try {\r\n                // Asigură-te că URL-ul este corect și că ID-ul este trimis\r\n                const response = await axios.get(`http://localhost:8083/api/user_device/${userId}/owned_devices`);\r\n                setDevices(response.data); // Setează lista de dispozitive în stare\r\n            } catch (err) {\r\n                console.error('Failed to fetch devices', err);\r\n                setError('Failed to fetch devices');\r\n            }\r\n        };\r\n\r\n        fetchDevices();\r\n    }, []); // Array-ul de dependențe este gol, deci se va rula o singură dată la montare\r\n\r\n    return (\r\n        <div>\r\n            <h2>Client Dashboard</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <h3>Your Devices:</h3>\r\n            <ul>\r\n                {devices.length > 0 ? ( // Verificăm dacă există dispozitive\r\n                    devices.map(device => (\r\n                        <li key={device.id}>{device.name}</li> // Afișează numele fiecărui dispozitiv\r\n                    ))\r\n                ) : (\r\n                    <p>No devices found.</p> // Mesaj dacă nu sunt dispozitive\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClientPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC/C,IAAI,CAACF,MAAM,EAAE;QACTF,QAAQ,CAAC,0BAA0B,CAAC;QACpC,OAAO,CAAC;MACZ;MAEA,IAAI;QACA;QACA,MAAMK,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,yCAAyCJ,MAAM,gBAAgB,CAAC;QACjGJ,UAAU,CAACO,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACV,KAAK,CAAC,yBAAyB,EAAES,GAAG,CAAC;QAC7CR,QAAQ,CAAC,yBAAyB,CAAC;MACvC;IACJ,CAAC;IAEDC,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIP,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBf,KAAK,iBAAIL,OAAA;MAAGqB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDpB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAAgB,QAAA,EACKb,OAAO,CAACoB,MAAM,GAAG,CAAC;MAAK;MACpBpB,OAAO,CAACqB,GAAG,CAACC,MAAM,iBACdzB,OAAA;QAAAgB,QAAA,EAAqBS,MAAM,CAACC;MAAI,GAAvBD,MAAM,CAACE,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC,CAAC;MAC1C,CAAC,gBAEFpB,OAAA;QAAAgB,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAClB,EAAA,CAzCID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}