{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robert\\\\WebstormProjects\\\\untitled\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './AdminStyle.css';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [clients, setClients] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: '',\n    password: '',\n    role: 'client',\n    name: '',\n    email: ''\n  });\n  const [error, setError] = useState('');\n  const [expandedClientId, setExpandedClientId] = useState(null);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [showDeviceForm, setShowDeviceForm] = useState({});\n  const [message, setMessage] = useState('');\n  const [updatedUser, setUpdatedUser] = useState({\n    name: '',\n    email: '',\n    username: '',\n    role: '',\n    password: ''\n  });\n  const [showUpdateForm, setShowUpdateForm] = useState({});\n  const [newDevice, setNewDevice] = useState({\n    address: '',\n    consumption: '',\n    description: ''\n  });\n  const [devices, setDevices] = useState([]); // Dispozitivele unui client selectat\n  const [expandedDeviceId, setExpandedDeviceId] = useState(null);\n  const userId = localStorage.getItem('userId');\n  const [updateForm, setUpdateForm] = useState({\n    description: '',\n    address: '',\n    consumption: ''\n  });\n  useEffect(() => {\n    const userRole = localStorage.getItem('role');\n    if (userRole !== 'admin') {\n      alert('You do not have access to this page!');\n      navigate('/client'); // Redirecționează clientul la pagina lui\n    } else {\n      fetchClients();\n    }\n  }, [navigate]);\n  const toggleExpandClient = clientId => {\n    setExpandedClientId(expandedClientId === clientId ? null : clientId);\n  };\n  const handleViewDevices = async clientId => {\n    try {\n      const response = await axios.get(`http://localhost:8083/api/user_device/${clientId}/owned_devices`);\n      setDevices(response.data);\n    } catch (err) {\n      console.error(err);\n      alert('Failed to fetch devices for client');\n    }\n  };\n  const handleUpdateDevice = async deviceId => {\n    try {\n      await axios.put(`http://localhost:8083/api/user_device/${deviceId}`, updateForm);\n      alert('Device updated successfully');\n      setExpandedDeviceId(null);\n      handleViewDevices(userId); // Reîncarcă lista dispozitivelor după update\n    } catch (err) {\n      console.error(err);\n      alert('Error updating device');\n    }\n  };\n  const handleDeleteDevice = async deviceId => {\n    try {\n      await axios.delete(`http://localhost:8083/api/user_device/device/${deviceId}`);\n      alert('Device deleted successfully');\n      setDevices(devices.filter(device => device.id !== deviceId));\n    } catch (err) {\n      console.error(err);\n      alert('Error deleting device');\n    }\n  };\n\n  // Funcția pentru Sign Out\n  const handleSignOut = () => {\n    localStorage.removeItem('role');\n    localStorage.removeItem('userId');\n    navigate('/'); // Redirecționează către pagina de login\n  };\n  const toggleUpdateForm = (e, userId, client) => {\n    e.stopPropagation();\n    setSelectedUserId(userId); // setează utilizatorul selectat\n\n    if (!client) {\n      console.error(\"Client is undefined\");\n      return; // oprește execuția dacă client este undefined\n    }\n    if (showUpdateForm[userId]) {\n      // Dacă formularul este ascuns, resetează câmpurile\n      setUpdatedUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      });\n    } else {\n      // Când formularul de actualizare este deschis, inițializează-l cu datele utilizatorului\n      setUpdatedUser({\n        name: client.name || '',\n        email: client.email || '',\n        username: client.username || '',\n        role: client.role || 'client'\n      });\n    }\n    setShowUpdateForm(prevState => ({\n      ...prevState,\n      [userId]: !prevState[userId] // toggle pentru formularul utilizatorului curent\n    }));\n  };\n\n  // Funcția pentru a crea un dispozitiv\n  const handleAddDevice = async (e, userId) => {\n    e.preventDefault(); // Previne reîncărcarea paginii\n    try {\n      const response = await axios.post('http://localhost:8083/api/user_device/insert', {\n        ...newDevice,\n        userId: userId // Aici folosești userId-ul clientului selectat\n      });\n      console.log(response.data); // Afișează mesajul de succes\n\n      // Setează mesajul de succes\n      setMessage('Device added successfully!');\n\n      // Resetează formularul\n      setNewDevice({\n        address: '',\n        consumption: '',\n        description: ''\n      });\n\n      // Oprește afișarea mesajului după câteva secunde\n      setTimeout(() => {\n        setMessage('');\n      }, 3000); // După 3 secunde\n    } catch (error) {\n      console.error('Error adding device:', error);\n\n      // Setează mesajul de eroare\n      setMessage('Failed to add device. Please try again.');\n\n      // Oprește afișarea mesajului după câteva secunde\n      setTimeout(() => {\n        setMessage('');\n      }, 3000); // După 3 secunde\n    }\n  };\n  const handleUpdateUser = async e => {\n    e.preventDefault();\n\n    // Loghează datele utilizatorului care urmează să fie actualizat\n    console.log(\"Updating user with data:\", updatedUser);\n    const updatedUserData = {\n      ...updatedUser,\n      password: updatedUser.password || ''\n    };\n    try {\n      const response = await fetch(`http://localhost:8084/api/users/${selectedUserId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedUserData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to update user');\n      }\n\n      // Resetează formularul după actualizare\n      setUpdatedUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n      setMessage('User updated successfully!');\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n      fetchClients();\n    } catch (error) {\n      console.error('Error updating user:', error);\n      setMessage(`Failed to update user: ${error.message}`);\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n    }\n  };\n  const handleUserSelect = userId => {\n    setSelectedUserId(userId); // Salvează ID-ul utilizatorului selectat\n  };\n  const handleDeleteUser = async id => {\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\n      try {\n        await axios.delete(`http://localhost:8084/api/users/${id}`);\n        fetchClients(); // Reîncarcă lista de utilizatori\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setError('Failed to delete user');\n      }\n    }\n  };\n  const fetchClients = async () => {\n    try {\n      const response = await axios.get('http://localhost:8084/api/users'); // API pentru a obține utilizatorii\n      setClients(response.data);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch clients');\n    }\n  };\n  const handleAddUser = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8084/api/users/insert', newUser); // API pentru a adăuga utilizatori\n      setNewUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      });\n      fetchClients(); // Reîncarcă lista după adăugare\n      setNewUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      }); // Resetează formularul\n    } catch (err) {\n      console.error(err);\n      setError('Failed to add user');\n    }\n  };\n  const toggleDeviceForm = (e, userId) => {\n    e.stopPropagation(); // Oprește propagarea evenimentului de click\n    setSelectedUserId(userId); // Setează userId pentru utilizatorul curent\n    setShowDeviceForm(prev => ({\n      ...prev,\n      [userId]: !prev[userId]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Client Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleSignOut,\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"clients-title\",\n      children: \"Clients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), clients.length > 0 ? /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Client ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: client.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: client.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleViewDevices(client.id),\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"View Devices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 37\n            }, this)]\n          }, client.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No clients found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }, this), devices.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"devices-title\",\n        children: \"Devices for Selected Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Consumption\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: devices.map(device => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: device.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: device.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: device.consumption\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => handleExpandClick(device.id),\n                    children: expandedDeviceId === device.id ? 'Hide' : 'Expand'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 41\n              }, this), expandedDeviceId === device.id && /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 4,\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    children: [/*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Description\",\n                      name: \"description\",\n                      value: updateForm.description,\n                      onChange: handleInputChange,\n                      fullWidth: true,\n                      margin: \"normal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Address\",\n                      name: \"address\",\n                      value: updateForm.address,\n                      onChange: handleInputChange,\n                      fullWidth: true,\n                      margin: \"normal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Consumption\",\n                      name: \"consumption\",\n                      value: updateForm.consumption,\n                      onChange: handleInputChange,\n                      fullWidth: true,\n                      margin: \"normal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"primary\",\n                      onClick: () => handleUpdateDevice(device.id),\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      onClick: () => handleDeleteDevice(device.id),\n                      style: {\n                        marginLeft: '10px'\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 45\n              }, this)]\n            }, device.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"UMMl2e8G7a25qtYdJd4e9kN4o04=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","_s","navigate","clients","setClients","newUser","setNewUser","username","password","role","name","email","error","setError","expandedClientId","setExpandedClientId","selectedUserId","setSelectedUserId","showDeviceForm","setShowDeviceForm","message","setMessage","updatedUser","setUpdatedUser","showUpdateForm","setShowUpdateForm","newDevice","setNewDevice","address","consumption","description","devices","setDevices","expandedDeviceId","setExpandedDeviceId","userId","localStorage","getItem","updateForm","setUpdateForm","userRole","alert","fetchClients","toggleExpandClient","clientId","handleViewDevices","response","get","data","err","console","handleUpdateDevice","deviceId","put","handleDeleteDevice","delete","filter","device","id","handleSignOut","removeItem","toggleUpdateForm","e","client","stopPropagation","prevState","handleAddDevice","preventDefault","post","log","setTimeout","handleUpdateUser","updatedUserData","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","responseData","handleUserSelect","handleDeleteUser","window","confirm","handleAddUser","toggleDeviceForm","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","variant","onClick","marginBottom","length","component","map","handleExpandClick","colSpan","label","value","onChange","handleInputChange","fullWidth","margin","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/robert/WebstormProjects/untitled/src/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './AdminStyle.css';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, TextField } from '@mui/material';\r\nconst AdminPage = () => {\r\n    const navigate = useNavigate();\r\n    const [clients, setClients] = useState([]);\r\n    const [newUser, setNewUser] = useState({ username: '', password: '', role: 'client', name: '', email: '' });\r\n    const [error, setError] = useState('');\r\n    const [expandedClientId, setExpandedClientId] = useState(null);\r\n    const [selectedUserId, setSelectedUserId] = useState(null);\r\n    const [showDeviceForm, setShowDeviceForm] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [updatedUser, setUpdatedUser] = useState({ name: '', email: '', username: '', role: '', password: '' });\r\n    const [showUpdateForm, setShowUpdateForm] = useState({});\r\n    const [newDevice, setNewDevice] = useState({ address: '', consumption: '', description: '' });\r\n    const [devices, setDevices] = useState([]); // Dispozitivele unui client selectat\r\n    const [expandedDeviceId, setExpandedDeviceId] = useState(null);\r\n    const userId = localStorage.getItem('userId');\r\n    const [updateForm, setUpdateForm] = useState({ description: '', address: '', consumption: '' });\r\n\r\n\r\n    useEffect(() => {\r\n        const userRole = localStorage.getItem('role');\r\n        if (userRole !== 'admin') {\r\n            alert('You do not have access to this page!');\r\n            navigate('/client'); // Redirecționează clientul la pagina lui\r\n        }else{\r\n            fetchClients();\r\n        }\r\n    }, [navigate]);\r\n\r\n    const toggleExpandClient = (clientId) => {\r\n        setExpandedClientId(expandedClientId === clientId ? null : clientId);\r\n    };\r\n\r\n    const handleViewDevices = async (clientId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8083/api/user_device/${clientId}/owned_devices`);\r\n            setDevices(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            alert('Failed to fetch devices for client');\r\n        }\r\n    };\r\n    const handleUpdateDevice = async (deviceId) => {\r\n        try {\r\n            await axios.put(`http://localhost:8083/api/user_device/${deviceId}`, updateForm);\r\n            alert('Device updated successfully');\r\n            setExpandedDeviceId(null);\r\n            handleViewDevices(userId); // Reîncarcă lista dispozitivelor după update\r\n        } catch (err) {\r\n            console.error(err);\r\n            alert('Error updating device');\r\n        }\r\n    };\r\n    const handleDeleteDevice = async (deviceId) => {\r\n        try {\r\n            await axios.delete(`http://localhost:8083/api/user_device/device/${deviceId}`);\r\n            alert('Device deleted successfully');\r\n            setDevices(devices.filter(device => device.id !== deviceId));\r\n        } catch (err) {\r\n            console.error(err);\r\n            alert('Error deleting device');\r\n        }\r\n    };\r\n\r\n    // Funcția pentru Sign Out\r\n    const handleSignOut = () => {\r\n        localStorage.removeItem('role');\r\n        localStorage.removeItem('userId');\r\n        navigate('/'); // Redirecționează către pagina de login\r\n    }\r\n    const toggleUpdateForm = (e, userId, client) => {\r\n        e.stopPropagation();\r\n        setSelectedUserId(userId); // setează utilizatorul selectat\r\n\r\n        if (!client) {\r\n            console.error(\"Client is undefined\");\r\n            return; // oprește execuția dacă client este undefined\r\n        }\r\n\r\n        if (showUpdateForm[userId]) {\r\n            // Dacă formularul este ascuns, resetează câmpurile\r\n            setUpdatedUser({\r\n                name: '',\r\n                email: '',\r\n                username: '',\r\n                password: '',\r\n                role: 'client',\r\n            });\r\n        } else {\r\n            // Când formularul de actualizare este deschis, inițializează-l cu datele utilizatorului\r\n            setUpdatedUser({\r\n                name: client.name || '',\r\n                email: client.email || '',\r\n                username: client.username || '',\r\n                role: client.role || 'client',\r\n            });\r\n        }\r\n\r\n        setShowUpdateForm((prevState) => ({\r\n            ...prevState,\r\n            [userId]: !prevState[userId], // toggle pentru formularul utilizatorului curent\r\n        }));\r\n    };\r\n\r\n\r\n    // Funcția pentru a crea un dispozitiv\r\n    const handleAddDevice = async (e, userId) => {\r\n        e.preventDefault(); // Previne reîncărcarea paginii\r\n        try {\r\n            const response = await axios.post('http://localhost:8083/api/user_device/insert', {\r\n                ...newDevice,\r\n                userId: userId // Aici folosești userId-ul clientului selectat\r\n            });\r\n            console.log(response.data); // Afișează mesajul de succes\r\n\r\n            // Setează mesajul de succes\r\n            setMessage('Device added successfully!');\r\n\r\n            // Resetează formularul\r\n            setNewDevice({ address: '', consumption: '', description: '' });\r\n\r\n            // Oprește afișarea mesajului după câteva secunde\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000); // După 3 secunde\r\n        } catch (error) {\r\n            console.error('Error adding device:', error);\r\n\r\n            // Setează mesajul de eroare\r\n            setMessage('Failed to add device. Please try again.');\r\n\r\n            // Oprește afișarea mesajului după câteva secunde\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000); // După 3 secunde\r\n        }\r\n    };\r\n\r\n    const handleUpdateUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Loghează datele utilizatorului care urmează să fie actualizat\r\n        console.log(\"Updating user with data:\", updatedUser);\r\n\r\n        const updatedUserData = {\r\n            ...updatedUser,\r\n            password: updatedUser.password || '',\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:8084/api/users/${selectedUserId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updatedUserData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Failed to update user');\r\n            }\r\n\r\n            // Resetează formularul după actualizare\r\n            setUpdatedUser({ name: '', email: '', username: '', password: '', role: 'client' });\r\n\r\n            const responseData = await response.json();\r\n            console.log(responseData);\r\n            setMessage('User updated successfully!');\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000);\r\n\r\n            fetchClients();\r\n        } catch (error) {\r\n            console.error('Error updating user:', error);\r\n            setMessage(`Failed to update user: ${error.message}`);\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleUserSelect = (userId) => {\r\n        setSelectedUserId(userId); // Salvează ID-ul utilizatorului selectat\r\n    };\r\n\r\n    const handleDeleteUser = async (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n            try {\r\n                await axios.delete(`http://localhost:8084/api/users/${id}`);\r\n                fetchClients(); // Reîncarcă lista de utilizatori\r\n            } catch (error) {\r\n                console.error('Error deleting user:', error);\r\n                setError('Failed to delete user');\r\n            }\r\n        }\r\n    };\r\n\r\n    const fetchClients = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8084/api/users'); // API pentru a obține utilizatorii\r\n            setClients(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to fetch clients');\r\n        }\r\n    };\r\n    const handleAddUser = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:8084/api/users/insert', newUser); // API pentru a adăuga utilizatori\r\n            setNewUser({\r\n                name:'',\r\n                email:'',\r\n                username:'',\r\n                password:'',\r\n                role:'client'\r\n            });\r\n            fetchClients(); // Reîncarcă lista după adăugare\r\n            setNewUser({ name:'',email:'',username: '', password: '', role: 'client' }); // Resetează formularul\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to add user');\r\n        }\r\n    };\r\n\r\n\r\n    const toggleDeviceForm = (e, userId) => {\r\n        e.stopPropagation(); // Oprește propagarea evenimentului de click\r\n        setSelectedUserId(userId); // Setează userId pentru utilizatorul curent\r\n        setShowDeviceForm((prev) => ({ ...prev, [userId]: !prev[userId] }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"client-dashboard\">\r\n            <h2>Client Dashboard</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleSignOut} style={{ marginBottom: '20px' }}>\r\n                Sign Out\r\n            </Button>\r\n            <h3 className=\"clients-title\">Clients</h3>\r\n            {clients.length > 0 ? (\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Client ID</TableCell>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>Actions</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {clients.map((client) => (\r\n                                <TableRow key={client.id}>\r\n                                    <TableCell>{client.id}</TableCell>\r\n                                    <TableCell>{client.name}</TableCell>\r\n                                    <TableCell>\r\n                                        <Button onClick={() => handleViewDevices(client.id)} variant=\"contained\" color=\"primary\">\r\n                                            View Devices\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            ) : (\r\n                <p>No clients found.</p>\r\n            )}\r\n\r\n            {devices.length > 0 && (\r\n                <>\r\n                    <h3 className=\"devices-title\">Devices for Selected Client</h3>\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Description</TableCell>\r\n                                    <TableCell>Address</TableCell>\r\n                                    <TableCell>Consumption</TableCell>\r\n                                    <TableCell>Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {devices.map((device) => (\r\n                                    <React.Fragment key={device.id}>\r\n                                        <TableRow>\r\n                                            <TableCell>{device.description}</TableCell>\r\n                                            <TableCell>{device.address}</TableCell>\r\n                                            <TableCell>{device.consumption}</TableCell>\r\n                                            <TableCell>\r\n                                                <Button onClick={() => handleExpandClick(device.id)}>\r\n                                                    {expandedDeviceId === device.id ? 'Hide' : 'Expand'}\r\n                                                </Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                        {expandedDeviceId === device.id && (\r\n                                            <TableRow>\r\n                                                <TableCell colSpan={4}>\r\n                                                    <form>\r\n                                                        <TextField\r\n                                                            label=\"Description\"\r\n                                                            name=\"description\"\r\n                                                            value={updateForm.description}\r\n                                                            onChange={handleInputChange}\r\n                                                            fullWidth\r\n                                                            margin=\"normal\"\r\n                                                        />\r\n                                                        <TextField\r\n                                                            label=\"Address\"\r\n                                                            name=\"address\"\r\n                                                            value={updateForm.address}\r\n                                                            onChange={handleInputChange}\r\n                                                            fullWidth\r\n                                                            margin=\"normal\"\r\n                                                        />\r\n                                                        <TextField\r\n                                                            label=\"Consumption\"\r\n                                                            name=\"consumption\"\r\n                                                            value={updateForm.consumption}\r\n                                                            onChange={handleInputChange}\r\n                                                            fullWidth\r\n                                                            margin=\"normal\"\r\n                                                        />\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={() => handleUpdateDevice(device.id)}\r\n                                                        >\r\n                                                            Update\r\n                                                        </Button>\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"secondary\"\r\n                                                            onClick={() => handleDeleteDevice(device.id)}\r\n                                                            style={{ marginLeft: '10px' }}\r\n                                                        >\r\n                                                            Delete\r\n                                                        </Button>\r\n                                                    </form>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}