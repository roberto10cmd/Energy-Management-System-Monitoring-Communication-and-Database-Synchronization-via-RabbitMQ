{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robert\\\\WebstormProjects\\\\untitled\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './AdminStyle.css';\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [clients, setClients] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: '',\n    password: '',\n    role: 'client',\n    name: '',\n    email: ''\n  });\n  const [error, setError] = useState('');\n  const [expandedClientId, setExpandedClientId] = useState(null);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [showDeviceForm, setShowDeviceForm] = useState({});\n  const [message, setMessage] = useState('');\n  const [updatedUser, setUpdatedUser] = useState({\n    name: '',\n    email: '',\n    username: '',\n    role: '',\n    password: ''\n  });\n  const [showUpdateForm, setShowUpdateForm] = useState({});\n  const [newDevice, setNewDevice] = useState({\n    address: '',\n    consumption: '',\n    description: ''\n  });\n  const [devices, setDevices] = useState([]); // Stare nouă pentru dispozitivele unui utilizator\n  const [clientDevices, setClientDevices] = useState({});\n  useEffect(() => {\n    const userRole = localStorage.getItem('role');\n    if (userRole !== 'admin') {\n      alert('You do not have access to this page!');\n      navigate('/client');\n    } else {\n      fetchClients();\n    }\n  }, [navigate]);\n  const handleDeleteDevice = async deviceId => {\n    if (window.confirm(\"Are you sure you want to delete this device?\")) {\n      try {\n        await axios.delete(`http://localhost:8083/api/user_device/device/${deviceId}`);\n        fetchDevicesForClient(selectedUserId); // Call fetchDevicesForClient to refresh the list\n      } catch (error) {\n        console.error('Error deleting device:', error);\n        setMessage('Failed to delete device.');\n        setTimeout(() => {\n          setMessage('');\n        }, 3000);\n      }\n    }\n  };\n  const fetchDevicesForClient = async clientId => {\n    try {\n      const response = await axios.get(`http://localhost:8083/api/user_device/${clientId}/owned_devices`);\n      setClientDevices(prevState => ({\n        ...prevState,\n        [clientId]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching devices:', error);\n    }\n  };\n  const toggleExpandClient = clientId => {\n    if (expandedClientId === clientId) {\n      setExpandedClientId(null);\n    } else {\n      setExpandedClientId(clientId);\n      fetchDevicesForClient(clientId);\n    }\n  };\n  const fetchClients = async () => {\n    try {\n      const response = await axios.get('http://localhost:8084/api/users');\n      setClients(response.data);\n    } catch (err) {\n      console.error(err);\n      setMessage('Failed to fetch clients');\n    }\n  };\n  const handleSignOut = () => {\n    localStorage.removeItem('role');\n    localStorage.removeItem('userId');\n    navigate('/'); // Redirecționează către pagina de login\n  };\n  const handleUpdateUser = async e => {\n    e.preventDefault();\n\n    // Loghează datele utilizatorului care urmează să fie actualizat\n    console.log(\"Updating user with data:\", updatedUser);\n    const updatedUserData = {\n      ...updatedUser,\n      password: updatedUser.password || ''\n    };\n    try {\n      const response = await fetch(`http://localhost:8084/api/users/${selectedUserId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedUserData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to update user');\n      }\n\n      // Resetează formularul după actualizare\n      setUpdatedUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      });\n      const responseData = await response.json();\n      console.log(responseData);\n      setMessage('User updated successfully!');\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n      fetchClients();\n    } catch (error) {\n      console.error('Error updating user:', error);\n      setMessage(`Failed to update user: ${error.message}`);\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n    }\n  };\n  const handleDeleteUser = async id => {\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\n      try {\n        await axios.delete(`http://localhost:8084/api/users/${id}`);\n        fetchClients(); // Reîncarcă lista de utilizatori\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setError('Failed to delete user');\n      }\n    }\n  };\n  const toggleUpdateForm = (e, userId, client) => {\n    e.stopPropagation();\n    setSelectedUserId(userId); // setează utilizatorul selectat\n\n    if (!client) {\n      console.error(\"Client is undefined\");\n      return; // oprește execuția dacă client este undefined\n    }\n    if (showUpdateForm[userId]) {\n      // Dacă formularul este ascuns, resetează câmpurile\n      setUpdatedUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      });\n    } else {\n      // Când formularul de actualizare este deschis, inițializează-l cu datele utilizatorului\n      setUpdatedUser({\n        name: client.name || '',\n        email: client.email || '',\n        username: client.username || '',\n        role: client.role || 'client'\n      });\n    }\n    setShowUpdateForm(prevState => ({\n      ...prevState,\n      [userId]: !prevState[userId] // toggle pentru formularul utilizatorului curent\n    }));\n  };\n  const toggleDeviceForm = (e, userId) => {\n    e.stopPropagation(); // Oprește propagarea evenimentului de click\n    setSelectedUserId(userId); // Setează userId pentru utilizatorul curent\n    setShowDeviceForm(prev => ({\n      ...prev,\n      [userId]: !prev[userId]\n    }));\n  };\n  const handleAddDevice = async (e, userId) => {\n    e.preventDefault(); // Previne reîncărcarea paginii\n    try {\n      const response = await axios.post('http://localhost:8083/api/user_device/insert', {\n        ...newDevice,\n        userId: userId // Aici folosești userId-ul clientului selectat\n      });\n      console.log(response.data); // Afișează mesajul de succes\n\n      // Setează mesajul de succes\n      setMessage('Device added successfully!');\n\n      // Resetează formularul\n      setNewDevice({\n        address: '',\n        consumption: '',\n        description: ''\n      });\n\n      // Oprește afișarea mesajului după câteva secunde\n      setTimeout(() => {\n        setMessage('');\n      }, 3000); // După 3 secunde\n    } catch (error) {\n      console.error('Error adding device:', error);\n\n      // Setează mesajul de eroare\n      setMessage('Failed to add device. Please try again.');\n\n      // Oprește afișarea mesajului după câteva secunde\n      setTimeout(() => {\n        setMessage('');\n      }, 3000); // După 3 secunde\n    }\n  };\n  const handleAddUser = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8084/api/users/insert', newUser); // API pentru a adăuga utilizatori\n      setNewUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      });\n      fetchClients(); // Reîncarcă lista după adăugare\n      setNewUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      }); // Resetează formularul\n    } catch (err) {\n      console.error(err);\n      setError('Failed to add user');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleSignOut,\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Client List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), clients.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: clients.map(client => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => toggleExpandClient(client.id),\n            children: client.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 33\n          }, this), expandedClientId === client.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"client-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"client-card\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Id: \", client.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"client-card\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Username: \", client.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"client-card\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Email: \", client.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteUser(client.id);\n              },\n              className: \"delete-button button-spacing-\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => toggleUpdateForm(e, client.id, client),\n              className: \"update-button button-spacing\",\n              children: showUpdateForm[client.id] ? 'Hide Update Form' : 'Update'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => toggleDeviceForm(e, client.id),\n              className: \"toggle-device-button button-spacing\",\n              children: showDeviceForm[client.id] ? 'Hide Device Form' : 'Add Device'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 41\n            }, this), showUpdateForm[client.id] && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUpdateUser,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Name\",\n                value: updatedUser.name,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  name: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                value: updatedUser.email,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  email: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Username\",\n                value: updatedUser.username,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  username: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: updatedUser.role,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  role: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"client\",\n                  children: \"Client\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"admin\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 45\n            }, this), showDeviceForm[client.id] && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => handleAddDevice(e, client.id),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Address\",\n                  value: newDevice.address,\n                  onChange: e => setNewDevice({\n                    ...newDevice,\n                    address: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  placeholder: \"Consumption\",\n                  value: newDevice.consumption,\n                  onChange: e => setNewDevice({\n                    ...newDevice,\n                    consumption: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Description\",\n                  value: newDevice.description,\n                  onChange: e => setNewDevice({\n                    ...newDevice,\n                    description: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Add Device\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 49\n              }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 61\n              }, this)]\n            }, void 0, true), clientDevices[client.id] && clientDevices[client.id].length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"device-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Consumption\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 53\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: clientDevices[client.id].map(device => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: device.address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: device.consumption\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: device.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDeleteDevice(device.id),\n                      className: \"delete-device-button\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 57\n                  }, this), \" \"]\n                }, device.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No devices found for this client.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 37\n          }, this)]\n        }, client.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No clients found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddUser,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: newUser.name,\n          onChange: e => setNewUser({\n            ...newUser,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email\",\n          value: newUser.email,\n          onChange: e => setNewUser({\n            ...newUser,\n            email: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: newUser.username,\n          onChange: e => setNewUser({\n            ...newUser,\n            username: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: newUser.password,\n          onChange: e => setNewUser({\n            ...newUser,\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"QsKPgs8RXh0cq/kJ5dxvhEeyu2w=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","_s","navigate","clients","setClients","newUser","setNewUser","username","password","role","name","email","error","setError","expandedClientId","setExpandedClientId","selectedUserId","setSelectedUserId","showDeviceForm","setShowDeviceForm","message","setMessage","updatedUser","setUpdatedUser","showUpdateForm","setShowUpdateForm","newDevice","setNewDevice","address","consumption","description","devices","setDevices","clientDevices","setClientDevices","userRole","localStorage","getItem","alert","fetchClients","handleDeleteDevice","deviceId","window","confirm","delete","fetchDevicesForClient","console","setTimeout","clientId","response","get","prevState","data","toggleExpandClient","err","handleSignOut","removeItem","handleUpdateUser","e","preventDefault","log","updatedUserData","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","responseData","handleDeleteUser","id","toggleUpdateForm","userId","client","stopPropagation","toggleDeviceForm","prev","handleAddDevice","post","handleAddUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","variant","onClick","marginBottom","length","map","cursor","onSubmit","type","placeholder","value","onChange","target","required","device","_c","$RefreshReg$"],"sources":["C:/Users/robert/WebstormProjects/untitled/src/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './AdminStyle.css';\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst AdminPage = () => {\r\n    const navigate = useNavigate();\r\n    const [clients, setClients] = useState([]);\r\n    const [newUser, setNewUser] = useState({ username: '', password: '', role: 'client', name: '', email: '' });\r\n    const [error, setError] = useState('');\r\n    const [expandedClientId, setExpandedClientId] = useState(null);\r\n    const [selectedUserId, setSelectedUserId] = useState(null);\r\n    const [showDeviceForm, setShowDeviceForm] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [updatedUser, setUpdatedUser] = useState({ name: '', email: '', username: '', role: '', password: '' });\r\n    const [showUpdateForm, setShowUpdateForm] = useState({});\r\n    const [newDevice, setNewDevice] = useState({ address: '', consumption: '', description: '' });\r\n\r\n    const [devices, setDevices] = useState([]); // Stare nouă pentru dispozitivele unui utilizator\r\n    const [clientDevices, setClientDevices] = useState({});\r\n\r\n    useEffect(() => {\r\n        const userRole = localStorage.getItem('role');\r\n        if (userRole !== 'admin') {\r\n            alert('You do not have access to this page!');\r\n            navigate('/client');\r\n        } else {\r\n            fetchClients();\r\n        }\r\n    }, [navigate]);\r\n\r\n    const handleDeleteDevice = async (deviceId) => {\r\n        if (window.confirm(\"Are you sure you want to delete this device?\")) {\r\n            try {\r\n                await axios.delete(`http://localhost:8083/api/user_device/device/${deviceId}`);\r\n                fetchDevicesForClient(selectedUserId); // Call fetchDevicesForClient to refresh the list\r\n            } catch (error) {\r\n                console.error('Error deleting device:', error);\r\n                setMessage('Failed to delete device.');\r\n                setTimeout(() => {\r\n                    setMessage('');\r\n                }, 3000);\r\n            }\r\n        }\r\n    };\r\n    const fetchDevicesForClient = async (clientId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8083/api/user_device/${clientId}/owned_devices`);\r\n            setClientDevices((prevState) => ({\r\n                ...prevState,\r\n                [clientId]: response.data\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error fetching devices:', error);\r\n        }\r\n    };\r\n\r\n    const toggleExpandClient = (clientId) => {\r\n        if (expandedClientId === clientId) {\r\n            setExpandedClientId(null);\r\n        } else {\r\n            setExpandedClientId(clientId);\r\n            fetchDevicesForClient(clientId);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const fetchClients = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8084/api/users');\r\n            setClients(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setMessage('Failed to fetch clients');\r\n        }\r\n    };\r\n    const handleSignOut = () => {\r\n        localStorage.removeItem('role');\r\n        localStorage.removeItem('userId');\r\n        navigate('/'); // Redirecționează către pagina de login\r\n    }\r\n\r\n    const handleUpdateUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Loghează datele utilizatorului care urmează să fie actualizat\r\n        console.log(\"Updating user with data:\", updatedUser);\r\n\r\n        const updatedUserData = {\r\n            ...updatedUser,\r\n            password: updatedUser.password || '',\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:8084/api/users/${selectedUserId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updatedUserData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Failed to update user');\r\n            }\r\n\r\n            // Resetează formularul după actualizare\r\n            setUpdatedUser({ name: '', email: '', username: '', password: '', role: 'client' });\r\n\r\n            const responseData = await response.json();\r\n            console.log(responseData);\r\n            setMessage('User updated successfully!');\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000);\r\n\r\n            fetchClients();\r\n        } catch (error) {\r\n            console.error('Error updating user:', error);\r\n            setMessage(`Failed to update user: ${error.message}`);\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000);\r\n        }\r\n    };\r\n    const handleDeleteUser = async (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n            try {\r\n                await axios.delete(`http://localhost:8084/api/users/${id}`);\r\n                fetchClients(); // Reîncarcă lista de utilizatori\r\n            } catch (error) {\r\n                console.error('Error deleting user:', error);\r\n                setError('Failed to delete user');\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleUpdateForm = (e, userId, client) => {\r\n        e.stopPropagation();\r\n        setSelectedUserId(userId); // setează utilizatorul selectat\r\n\r\n        if (!client) {\r\n            console.error(\"Client is undefined\");\r\n            return; // oprește execuția dacă client este undefined\r\n        }\r\n\r\n        if (showUpdateForm[userId]) {\r\n            // Dacă formularul este ascuns, resetează câmpurile\r\n            setUpdatedUser({\r\n                name: '',\r\n                email: '',\r\n                username: '',\r\n                password: '',\r\n                role: 'client',\r\n            });\r\n        } else {\r\n            // Când formularul de actualizare este deschis, inițializează-l cu datele utilizatorului\r\n            setUpdatedUser({\r\n                name: client.name || '',\r\n                email: client.email || '',\r\n                username: client.username || '',\r\n                role: client.role || 'client',\r\n            });\r\n        }\r\n\r\n        setShowUpdateForm((prevState) => ({\r\n            ...prevState,\r\n            [userId]: !prevState[userId], // toggle pentru formularul utilizatorului curent\r\n        }));\r\n    };\r\n    const toggleDeviceForm = (e, userId) => {\r\n        e.stopPropagation(); // Oprește propagarea evenimentului de click\r\n        setSelectedUserId(userId); // Setează userId pentru utilizatorul curent\r\n        setShowDeviceForm((prev) => ({ ...prev, [userId]: !prev[userId] }));\r\n    };\r\n\r\n    const handleAddDevice = async (e, userId) => {\r\n        e.preventDefault(); // Previne reîncărcarea paginii\r\n        try {\r\n            const response = await axios.post('http://localhost:8083/api/user_device/insert', {\r\n                ...newDevice,\r\n                userId: userId // Aici folosești userId-ul clientului selectat\r\n            });\r\n            console.log(response.data); // Afișează mesajul de succes\r\n\r\n            // Setează mesajul de succes\r\n            setMessage('Device added successfully!');\r\n\r\n            // Resetează formularul\r\n            setNewDevice({ address: '', consumption: '', description: '' });\r\n\r\n            // Oprește afișarea mesajului după câteva secunde\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000); // După 3 secunde\r\n        } catch (error) {\r\n            console.error('Error adding device:', error);\r\n\r\n            // Setează mesajul de eroare\r\n            setMessage('Failed to add device. Please try again.');\r\n\r\n            // Oprește afișarea mesajului după câteva secunde\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000); // După 3 secunde\r\n        }\r\n    };\r\n\r\n    const handleAddUser = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:8084/api/users/insert', newUser); // API pentru a adăuga utilizatori\r\n            setNewUser({\r\n                name:'',\r\n                email:'',\r\n                username:'',\r\n                password:'',\r\n                role:'client'\r\n            });\r\n            fetchClients(); // Reîncarcă lista după adăugare\r\n            setNewUser({ name:'',email:'',username: '', password: '', role: 'client' }); // Resetează formularul\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to add user');\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"admin-container\">\r\n            <h2>Admin Dashboard</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleSignOut} style={{ marginBottom: '20px' }}>\r\n                Sign Out\r\n            </Button>\r\n\r\n            {/* Secțiunea 1: Lista Clienților */}\r\n            <div className=\"section\">\r\n                <h3>Client List</h3>\r\n                {clients.length > 0 ? (\r\n                    <ul>\r\n                        {clients.map(client => (\r\n                            <li key={client.id} style={{ cursor: 'pointer' }}>\r\n                                {/* Doar titlul utilizatorului este clickabil pentru expand/collapse */}\r\n                                <div onClick={() => toggleExpandClient(client.id)}>\r\n                                    {client.name}\r\n                                </div>\r\n\r\n                                {expandedClientId === client.id && (\r\n                                    <div className=\"client-details\">\r\n                                        <div className=\"client-card\">\r\n                                            <p>Id: {client.id}</p>\r\n                                        </div>\r\n                                        <div className=\"client-card\">\r\n                                            <p>Username: {client.username}</p>\r\n                                        </div>\r\n                                        <div className=\"client-card\">\r\n                                            <p>Email: {client.email}</p>\r\n                                        </div>\r\n\r\n                                        <button\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                handleDeleteUser(client.id);\r\n                                            }}\r\n                                            className=\"delete-button button-spacing-\"\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n\r\n                                        <button onClick={(e) => toggleUpdateForm(e, client.id, client)}\r\n                                                className=\"update-button button-spacing\">\r\n                                            {showUpdateForm[client.id] ? 'Hide Update Form' : 'Update'}\r\n                                        </button>\r\n\r\n                                        {/* Buton pentru a adăuga un dispozitiv */}\r\n                                        <button\r\n                                            onClick={(e) => toggleDeviceForm(e, client.id)}\r\n                                            className=\"toggle-device-button button-spacing\"\r\n                                        >\r\n                                            {showDeviceForm[client.id] ? 'Hide Device Form' : 'Add Device'}\r\n                                        </button>\r\n\r\n                                        {showUpdateForm[client.id] && (\r\n                                            <form onSubmit={handleUpdateUser}>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Name\"\r\n                                                    value={updatedUser.name}\r\n                                                    onChange={(e) => setUpdatedUser({\r\n                                                        ...updatedUser,\r\n                                                        name: e.target.value\r\n                                                    })}\r\n                                                    required\r\n                                                />\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    value={updatedUser.email}\r\n                                                    onChange={(e) => setUpdatedUser({\r\n                                                        ...updatedUser,\r\n                                                        email: e.target.value\r\n                                                    })}\r\n                                                    required\r\n                                                />\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Username\"\r\n                                                    value={updatedUser.username}\r\n                                                    onChange={(e) => setUpdatedUser({\r\n                                                        ...updatedUser,\r\n                                                        username: e.target.value\r\n                                                    })}\r\n                                                    required\r\n                                                />\r\n                                                <select\r\n                                                    value={updatedUser.role}\r\n                                                    onChange={(e) => setUpdatedUser({\r\n                                                        ...updatedUser,\r\n                                                        role: e.target.value\r\n                                                    })}\r\n                                                >\r\n                                                    <option value=\"client\">Client</option>\r\n                                                    <option value=\"admin\">Admin</option>\r\n                                                </select>\r\n                                                <button type=\"submit\">Update</button>\r\n                                            </form>\r\n                                        )}\r\n\r\n                                        {/* Formular pentru adăugarea unui dispozitiv */}\r\n                                        {showDeviceForm[client.id] && (\r\n                                            <>\r\n                                                <form onSubmit={(e) => handleAddDevice(e, client.id)}>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Address\"\r\n                                                        value={newDevice.address}\r\n                                                        onChange={(e) => setNewDevice({\r\n                                                            ...newDevice,\r\n                                                            address: e.target.value\r\n                                                        })}\r\n                                                        required\r\n                                                    />\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        placeholder=\"Consumption\"\r\n                                                        value={newDevice.consumption}\r\n                                                        onChange={(e) => setNewDevice({\r\n                                                            ...newDevice,\r\n                                                            consumption: e.target.value\r\n                                                        })}\r\n                                                        required\r\n                                                    />\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Description\"\r\n                                                        value={newDevice.description}\r\n                                                        onChange={(e) => setNewDevice({\r\n                                                            ...newDevice,\r\n                                                            description: e.target.value\r\n                                                        })}\r\n                                                        required\r\n                                                    />\r\n                                                    <button type=\"submit\">Add Device</button>\r\n                                                </form>\r\n                                                {message && <p>{message}</p>}\r\n                                            </>\r\n                                        )}\r\n\r\n                                        {/* Tabelul cu dispozitivele clientului */}\r\n                                        {clientDevices[client.id] && clientDevices[client.id].length > 0 ? (\r\n                                            <table className=\"device-table\">\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>Address</th>\r\n                                                    <th>Consumption</th>\r\n                                                    <th>Description</th>\r\n                                                    <th>Actions</th> {/* New header for actions */}\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {clientDevices[client.id].map((device) => (\r\n                                                    <tr key={device.id}>\r\n                                                        <td>{device.address}</td>\r\n                                                        <td>{device.consumption}</td>\r\n                                                        <td>{device.description}</td>\r\n                                                        <td>\r\n                                                            <button\r\n                                                                onClick={() => handleDeleteDevice(device.id)}\r\n                                                                className=\"delete-device-button\"\r\n                                                            >\r\n                                                                Delete\r\n                                                            </button>\r\n                                                        </td> {/* Button for deleting device */}\r\n                                                    </tr>\r\n                                                ))}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        ) : (\r\n                                            <p>No devices found for this client.</p>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>No clients found.</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Secțiunea 2: Adăugare Utilizator */}\r\n            <div className=\"section\">\r\n                <h3>Add User</h3>\r\n                <form onSubmit={handleAddUser}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        value={newUser.name}\r\n                        onChange={(e) => setNewUser({...newUser, name: e.target.value})}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        value={newUser.email}\r\n                        onChange={(e) => setNewUser({...newUser, email: e.target.value})}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        value={newUser.username}\r\n                        onChange={(e) => setNewUser({...newUser, username: e.target.value})}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={newUser.password}\r\n                        onChange={(e) => setNewUser({...newUser, password: e.target.value})}\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">Add User</button>\r\n                </form>\r\n                {message && <p>{message}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n    export default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}