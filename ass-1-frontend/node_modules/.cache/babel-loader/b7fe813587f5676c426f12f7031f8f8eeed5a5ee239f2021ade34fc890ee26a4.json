{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robert\\\\WebstormProjects\\\\untitled\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './AdminStyle.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [clients, setClients] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: '',\n    password: '',\n    role: 'client'\n  });\n  const [error, setError] = useState('');\n  const [expandedClientId, setExpandedClientId] = useState(null);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [showDeviceForm, setShowDeviceForm] = useState({}); // Obiect pentru a controla starea formularelor de dispozitive\n  const [message, setMessage] = useState(''); // Pentru a afișa mesajul de succes sau eroare\n  const [updatedUser, setUpdatedUser] = useState({\n    name: '',\n    email: '',\n    username: '',\n    role: ''\n  }); // Datele de actualizare\n  const [showUpdateForm, setShowUpdateForm] = useState({}); // Controlează afisarea formularului de actualizare\n  const [newDevice, setNewDevice] = useState({\n    address: '',\n    consumption: '',\n    description: ''\n  });\n  const [userData, setUserData] = useState({\n    name: '',\n    email: '',\n    username: '',\n    role: '',\n    password: '' // Adaugă câmpul password\n  });\n  useEffect(() => {\n    const userRole = localStorage.getItem('role');\n    if (userRole !== 'admin') {\n      alert('You do not have access to this page!');\n      navigate('/client'); // Redirecționează clientul la pagina lui\n    } else {\n      fetchClients();\n    }\n  }, [navigate]);\n  const toggleExpandClient = clientId => {\n    setExpandedClientId(expandedClientId === clientId ? null : clientId);\n  };\n  const toggleUpdateForm = (e, userId, client) => {\n    e.stopPropagation();\n    setSelectedUserId(userId); // setează utilizatorul selectat\n\n    if (!client) {\n      console.error(\"Client is undefined\");\n      return; // oprește execuția dacă client este undefined\n    }\n    if (showUpdateForm[userId]) {\n      // Dacă formularul este ascuns, resetează câmpurile\n      setUpdatedUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      });\n    } else {\n      // Când formularul de actualizare este deschis, inițializează-l cu datele utilizatorului\n      setUpdatedUser({\n        name: client.name || '',\n        email: client.email || '',\n        username: client.username || '',\n        role: client.role || 'client'\n      });\n    }\n    setShowUpdateForm(prevState => ({\n      ...prevState,\n      [userId]: !prevState[userId] // toggle pentru formularul utilizatorului curent\n    }));\n  };\n\n  // Funcția pentru a crea un dispozitiv\n  const handleAddDevice = async (e, userId) => {\n    e.preventDefault(); // Previne reîncărcarea paginii\n    try {\n      const response = await axios.post('http://localhost:8083/api/user_device/insert', {\n        ...newDevice,\n        userId: userId // Aici folosești userId-ul clientului selectat\n      });\n      console.log(response.data); // Afișează mesajul de succes\n\n      // Setează mesajul de succes\n      setMessage('Device added successfully!');\n\n      // Resetează formularul\n      setNewDevice({\n        address: '',\n        consumption: '',\n        description: ''\n      });\n\n      // Oprește afișarea mesajului după câteva secunde\n      setTimeout(() => {\n        setMessage('');\n      }, 3000); // După 3 secunde\n    } catch (error) {\n      console.error('Error adding device:', error);\n\n      // Setează mesajul de eroare\n      setMessage('Failed to add device. Please try again.');\n\n      // Oprește afișarea mesajului după câteva secunde\n      setTimeout(() => {\n        setMessage('');\n      }, 3000); // După 3 secunde\n    }\n  };\n  const handleUpdateUser = async e => {\n    e.preventDefault();\n\n    // Loghează datele utilizatorului care urmează să fie actualizat\n    console.log(\"Updating user with data:\", updatedUser);\n    const updatedUser = {\n      ...userData,\n      password: userData.password || '' // Asigură-te că trimiți un câmp pentru parolă\n    };\n    try {\n      const response = await fetch(`http://localhost:8084/api/users/${selectedUserId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedUser)\n      });\n      if (!response.ok) {\n        // Dacă răspunsul nu este ok, aruncă o eroare\n        const errorData = await response.json(); // Obține datele de eroare din răspuns\n        throw new Error(errorData.message || 'Failed to update user'); // Aruncă o eroare cu mesajul corespunzător\n      }\n\n      // Resetează formularul după actualizare\n      setUpdatedUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      });\n      const responseData = await response.json(); // Obține datele răspunsului\n      console.log(responseData); // Verifică răspunsul de la server\n      setMessage('User updated successfully!');\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n      fetchClients(); // Reîncarcă lista de clienți după actualizare\n    } catch (error) {\n      console.error('Error updating user:', error);\n\n      // Afișează mesajul de eroare\n      setMessage(`Failed to update user: ${error.message}`);\n\n      // Oprește afișarea mesajului după câteva secunde\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n    }\n  };\n  const handleUserSelect = userId => {\n    setSelectedUserId(userId); // Salvează ID-ul utilizatorului selectat\n  };\n  const handleDeleteUser = async id => {\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\n      try {\n        await axios.delete(`http://localhost:8084/api/users/${id}`);\n        fetchClients(); // Reîncarcă lista de utilizatori\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setError('Failed to delete user');\n      }\n    }\n  };\n  const fetchClients = async () => {\n    try {\n      const response = await axios.get('http://localhost:8084/api/users'); // API pentru a obține utilizatorii\n      setClients(response.data);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch clients');\n    }\n  };\n  const handleAddUser = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8084/api/users/insert', newUser); // API pentru a adăuga utilizatori\n      setNewUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      });\n      fetchClients(); // Reîncarcă lista după adăugare\n      setNewUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      }); // Resetează formularul\n    } catch (err) {\n      console.error(err);\n      setError('Failed to add user');\n    }\n  };\n  const toggleDeviceForm = (e, userId) => {\n    e.stopPropagation(); // Oprește propagarea evenimentului de click\n    setSelectedUserId(userId); // Setează userId pentru utilizatorul curent\n    setShowDeviceForm(prev => ({\n      ...prev,\n      [userId]: !prev[userId]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Client List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), clients.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: clients.map(client => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => toggleExpandClient(client.id),\n            children: client.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 33\n          }, this), expandedClientId === client.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"client-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Id: \", client.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Username: \", client.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", client.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteUser(client.id);\n              },\n              className: \"delete-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => toggleUpdateForm(e, client.id, client),\n              className: \"update-button\",\n              children: showUpdateForm[client.id] ? 'Hide Update Form' : 'Update User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => toggleDeviceForm(e, client.id),\n              className: \"toggle-device-button\",\n              children: showDeviceForm[client.id] ? 'Hide Device Form' : 'Add Device'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 41\n            }, this), showUpdateForm[client.id] && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUpdateUser,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Name\",\n                value: updatedUser.name,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  name: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                value: updatedUser.email,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  email: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Username\",\n                value: updatedUser.username,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  username: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: updatedUser.role,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  role: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"client\",\n                  children: \"Client\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"admin\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 45\n            }, this), showDeviceForm[client.id] && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => handleAddDevice(e, client.id),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Address\",\n                  value: newDevice.address,\n                  onChange: e => setNewDevice({\n                    ...newDevice,\n                    address: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  placeholder: \"Consumption\",\n                  value: newDevice.consumption,\n                  onChange: e => setNewDevice({\n                    ...newDevice,\n                    consumption: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Description\",\n                  value: newDevice.description,\n                  onChange: e => setNewDevice({\n                    ...newDevice,\n                    description: e.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Add Device\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 49\n              }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 61\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 37\n          }, this)]\n        }, client.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No clients found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddUser,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: newUser.name,\n          onChange: e => setNewUser({\n            ...newUser,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email\",\n          value: newUser.email,\n          onChange: e => setNewUser({\n            ...newUser,\n            email: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: newUser.username,\n          onChange: e => setNewUser({\n            ...newUser,\n            username: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: newUser.password,\n          onChange: e => setNewUser({\n            ...newUser,\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newUser.role,\n          onChange: e => setNewUser({\n            ...newUser,\n            role: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"client\",\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"FeVYEduE6A7iCYHK+rukApN+duo=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","_s","navigate","clients","setClients","newUser","setNewUser","username","password","role","error","setError","expandedClientId","setExpandedClientId","selectedUserId","setSelectedUserId","showDeviceForm","setShowDeviceForm","message","setMessage","updatedUser","setUpdatedUser","name","email","showUpdateForm","setShowUpdateForm","newDevice","setNewDevice","address","consumption","description","userData","setUserData","userRole","localStorage","getItem","alert","fetchClients","toggleExpandClient","clientId","toggleUpdateForm","e","userId","client","stopPropagation","console","prevState","handleAddDevice","preventDefault","response","post","log","data","setTimeout","handleUpdateUser","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","responseData","handleUserSelect","handleDeleteUser","id","window","confirm","delete","get","err","handleAddUser","toggleDeviceForm","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","cursor","onClick","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/robert/WebstormProjects/untitled/src/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './AdminStyle.css';\r\nconst AdminPage = () => {\r\n    const navigate = useNavigate();\r\n    const [clients, setClients] = useState([]);\r\n    const [newUser, setNewUser] = useState({ username: '', password: '', role: 'client' });\r\n    const [error, setError] = useState('');\r\n    const [expandedClientId, setExpandedClientId] = useState(null);\r\n    const [selectedUserId, setSelectedUserId] = useState(null);\r\n    const [showDeviceForm, setShowDeviceForm] = useState({}); // Obiect pentru a controla starea formularelor de dispozitive\r\n    const [message, setMessage] = useState(''); // Pentru a afișa mesajul de succes sau eroare\r\n    const [updatedUser, setUpdatedUser] = useState({ name: '', email: '', username: '', role: '' }); // Datele de actualizare\r\n    const [showUpdateForm, setShowUpdateForm] = useState({}); // Controlează afisarea formularului de actualizare\r\n    const [newDevice, setNewDevice] = useState({address: '', consumption: '', description: '',});\r\n    const [userData, setUserData] = useState({\r\n        name: '',\r\n        email: '',\r\n        username: '',\r\n        role: '',\r\n        password: '', // Adaugă câmpul password\r\n    });\r\n\r\n    useEffect(() => {\r\n        const userRole = localStorage.getItem('role');\r\n        if (userRole !== 'admin') {\r\n            alert('You do not have access to this page!');\r\n            navigate('/client'); // Redirecționează clientul la pagina lui\r\n        }else{\r\n            fetchClients();\r\n        }\r\n    }, [navigate]);\r\n\r\n    const toggleExpandClient = (clientId) => {\r\n        setExpandedClientId(expandedClientId === clientId ? null : clientId);\r\n    };\r\n\r\n    const toggleUpdateForm = (e, userId, client) => {\r\n        e.stopPropagation();\r\n        setSelectedUserId(userId); // setează utilizatorul selectat\r\n\r\n        if (!client) {\r\n            console.error(\"Client is undefined\");\r\n            return; // oprește execuția dacă client este undefined\r\n        }\r\n\r\n        if (showUpdateForm[userId]) {\r\n            // Dacă formularul este ascuns, resetează câmpurile\r\n            setUpdatedUser({\r\n                name: '',\r\n                email: '',\r\n                username: '',\r\n                password: '',\r\n                role: 'client',\r\n            });\r\n        } else {\r\n            // Când formularul de actualizare este deschis, inițializează-l cu datele utilizatorului\r\n            setUpdatedUser({\r\n                name: client.name || '',\r\n                email: client.email || '',\r\n                username: client.username || '',\r\n                role: client.role || 'client',\r\n            });\r\n        }\r\n\r\n        setShowUpdateForm((prevState) => ({\r\n            ...prevState,\r\n            [userId]: !prevState[userId], // toggle pentru formularul utilizatorului curent\r\n        }));\r\n    };\r\n\r\n\r\n    // Funcția pentru a crea un dispozitiv\r\n    const handleAddDevice = async (e, userId) => {\r\n        e.preventDefault(); // Previne reîncărcarea paginii\r\n        try {\r\n            const response = await axios.post('http://localhost:8083/api/user_device/insert', {\r\n                ...newDevice,\r\n                userId: userId // Aici folosești userId-ul clientului selectat\r\n            });\r\n            console.log(response.data); // Afișează mesajul de succes\r\n\r\n            // Setează mesajul de succes\r\n            setMessage('Device added successfully!');\r\n\r\n            // Resetează formularul\r\n            setNewDevice({ address: '', consumption: '', description: '' });\r\n\r\n            // Oprește afișarea mesajului după câteva secunde\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000); // După 3 secunde\r\n        } catch (error) {\r\n            console.error('Error adding device:', error);\r\n\r\n            // Setează mesajul de eroare\r\n            setMessage('Failed to add device. Please try again.');\r\n\r\n            // Oprește afișarea mesajului după câteva secunde\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000); // După 3 secunde\r\n        }\r\n    };\r\n    const handleUpdateUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n    \r\n\r\n        // Loghează datele utilizatorului care urmează să fie actualizat\r\n        console.log(\"Updating user with data:\", updatedUser);\r\n        const updatedUser = {\r\n            ...userData,\r\n            password: userData.password || '', // Asigură-te că trimiți un câmp pentru parolă\r\n        };\r\n        try {\r\n            const response = await fetch(`http://localhost:8084/api/users/${selectedUserId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updatedUser),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                // Dacă răspunsul nu este ok, aruncă o eroare\r\n                const errorData = await response.json(); // Obține datele de eroare din răspuns\r\n                throw new Error(errorData.message || 'Failed to update user'); // Aruncă o eroare cu mesajul corespunzător\r\n            }\r\n\r\n            // Resetează formularul după actualizare\r\n            setUpdatedUser({\r\n                name: '',\r\n                email: '',\r\n                username: '',\r\n                password: '',\r\n                role: 'client',\r\n            });\r\n\r\n            const responseData = await response.json(); // Obține datele răspunsului\r\n            console.log(responseData); // Verifică răspunsul de la server\r\n            setMessage('User updated successfully!');\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000);\r\n\r\n            fetchClients(); // Reîncarcă lista de clienți după actualizare\r\n        } catch (error) {\r\n            console.error('Error updating user:', error);\r\n\r\n            // Afișează mesajul de eroare\r\n            setMessage(`Failed to update user: ${error.message}`);\r\n\r\n            // Oprește afișarea mesajului după câteva secunde\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleUserSelect = (userId) => {\r\n        setSelectedUserId(userId); // Salvează ID-ul utilizatorului selectat\r\n    };\r\n\r\n    const handleDeleteUser = async (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n            try {\r\n                await axios.delete(`http://localhost:8084/api/users/${id}`);\r\n                fetchClients(); // Reîncarcă lista de utilizatori\r\n            } catch (error) {\r\n                console.error('Error deleting user:', error);\r\n                setError('Failed to delete user');\r\n            }\r\n        }\r\n    };\r\n\r\n    const fetchClients = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8084/api/users'); // API pentru a obține utilizatorii\r\n            setClients(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to fetch clients');\r\n        }\r\n    };\r\n    const handleAddUser = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:8084/api/users/insert', newUser); // API pentru a adăuga utilizatori\r\n            setNewUser({\r\n                name:'',\r\n                email:'',\r\n                username:'',\r\n                password:'',\r\n                role:'client'\r\n            });\r\n            fetchClients(); // Reîncarcă lista după adăugare\r\n            setNewUser({ name:'',email:'',username: '', password: '', role: 'client' }); // Resetează formularul\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to add user');\r\n        }\r\n    };\r\n\r\n\r\n    const toggleDeviceForm = (e, userId) => {\r\n        e.stopPropagation(); // Oprește propagarea evenimentului de click\r\n        setSelectedUserId(userId); // Setează userId pentru utilizatorul curent\r\n        setShowDeviceForm((prev) => ({ ...prev, [userId]: !prev[userId] }));\r\n    };\r\n    return (\r\n        <div className=\"admin-container\">\r\n            <h2>Admin Dashboard</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n            {/* Secțiunea 1: Lista Clienților */}\r\n            <div className=\"section\">\r\n                <h3>Client List</h3>\r\n                {clients.length > 0 ? (\r\n                    <ul>\r\n                        {clients.map(client => (\r\n                            <li key={client.id} style={{ cursor: 'pointer' }}>\r\n                                {/* Doar titlul utilizatorului este clickabil pentru expand/collapse */}\r\n                                <div onClick={() => toggleExpandClient(client.id)}>\r\n                                    {client.name}\r\n                                </div>\r\n\r\n                                {expandedClientId === client.id && (\r\n                                    <div className=\"client-details\">\r\n                                        <p>Id: {client.id}</p>\r\n                                        <p>Username: {client.username}</p>\r\n                                        <p>Email: {client.email}</p>\r\n\r\n                                        <button\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                handleDeleteUser(client.id);\r\n                                            }}\r\n                                            className=\"delete-button\"\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n\r\n                                        <button onClick={(e) => toggleUpdateForm(e, client.id, client)}\r\n                                                className=\"update-button\">\r\n                                            {showUpdateForm[client.id] ? 'Hide Update Form' : 'Update User'}\r\n                                        </button>\r\n\r\n                                        {/* Buton pentru a adăuga un dispozitiv */}\r\n                                        <button\r\n                                            onClick={(e) => toggleDeviceForm(e, client.id)}\r\n                                            className=\"toggle-device-button\"\r\n                                        >\r\n                                            {showDeviceForm[client.id] ? 'Hide Device Form' : 'Add Device'}\r\n                                        </button>\r\n\r\n\r\n                                        {showUpdateForm[client.id] && (\r\n                                            <form onSubmit={handleUpdateUser}>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Name\"\r\n                                                    value={updatedUser.name}\r\n                                                    onChange={(e) => setUpdatedUser({\r\n                                                        ...updatedUser,\r\n                                                        name: e.target.value\r\n                                                    })}\r\n                                                    required\r\n                                                />\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    value={updatedUser.email}\r\n                                                    onChange={(e) => setUpdatedUser({\r\n                                                        ...updatedUser,\r\n                                                        email: e.target.value\r\n                                                    })}\r\n                                                    required\r\n                                                />\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Username\"\r\n                                                    value={updatedUser.username}\r\n                                                    onChange={(e) => setUpdatedUser({\r\n                                                        ...updatedUser,\r\n                                                        username: e.target.value\r\n                                                    })}\r\n                                                    required\r\n                                                />\r\n                                                <select\r\n                                                    value={updatedUser.role}\r\n                                                    onChange={(e) => setUpdatedUser({\r\n                                                        ...updatedUser,\r\n                                                        role: e.target.value\r\n                                                    })}\r\n                                                >\r\n                                                    <option value=\"client\">Client</option>\r\n                                                    <option value=\"admin\">Admin</option>\r\n                                                </select>\r\n                                                <button type=\"submit\">Update</button>\r\n                                            </form>\r\n                                        )}\r\n                                        {/* Formular pentru adăugarea unui dispozitiv */}\r\n                                        {showDeviceForm[client.id] && (\r\n                                            <>\r\n                                                <form onSubmit={(e) => handleAddDevice(e, client.id)}>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Address\"\r\n                                                        value={newDevice.address}\r\n                                                        onChange={(e) => setNewDevice({\r\n                                                            ...newDevice,\r\n                                                            address: e.target.value\r\n                                                        })}\r\n                                                        required\r\n                                                    />\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        placeholder=\"Consumption\"\r\n                                                        value={newDevice.consumption}\r\n                                                        onChange={(e) => setNewDevice({\r\n                                                            ...newDevice,\r\n                                                            consumption: e.target.value\r\n                                                        })}\r\n                                                        required\r\n                                                    />\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Description\"\r\n                                                        value={newDevice.description}\r\n                                                        onChange={(e) => setNewDevice({\r\n                                                            ...newDevice,\r\n                                                            description: e.target.value\r\n                                                        })}\r\n                                                        required\r\n                                                    />\r\n\r\n                                                    <button type=\"submit\">Add Device</button>\r\n                                                </form>\r\n                                                {message && <p>{message}</p>}\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>No clients found.</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Secțiunea 2: Adăugare Utilizator */}\r\n            <div className=\"section\">\r\n                <h3>Add User</h3>\r\n                <form onSubmit={handleAddUser}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        value={newUser.name}\r\n                        onChange={(e) => setNewUser({...newUser, name: e.target.value})}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        value={newUser.email}\r\n                        onChange={(e) => setNewUser({...newUser, email: e.target.value})}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        value={newUser.username}\r\n                        onChange={(e) => setNewUser({...newUser, username: e.target.value})}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={newUser.password}\r\n                        onChange={(e) => setNewUser({...newUser, password: e.target.value})}\r\n                        required\r\n                    />\r\n                    <select\r\n                        value={newUser.role}\r\n                        onChange={(e) => setNewUser({...newUser, role: e.target.value})}\r\n                    >\r\n                        <option value=\"client\">Client</option>\r\n                        <option value=\"admin\">Admin</option>\r\n                    </select>\r\n                    <button type=\"submit\">Add User</button>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}