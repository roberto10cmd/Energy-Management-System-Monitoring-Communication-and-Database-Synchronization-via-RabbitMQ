{"ast":null,"code":"var _jsxFileName = \"D:\\\\DS2024_30645_Gradinariu_Robert_Assig1\\\\ass-1-frontend\\\\src\\\\ClientPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ClientStyle.css';\nimport axios from 'axios';\nimport SockJS from 'sockjs-client';\nimport { Stomp } from '@stomp/stompjs';\nimport { Typography, Button, Card, CardContent, Grid } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientPage = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [consumptionData, setConsumptionData] = useState(null);\n  const [error, setError] = useState('');\n  const userId = localStorage.getItem('userId');\n  const navigate = useNavigate();\n  const [websocketConnected, setWebsocketConnected] = useState(false);\n  const handleSignOut = () => {\n    localStorage.removeItem('role');\n    localStorage.removeItem('userId');\n    navigate('/');\n  };\n  const fetchDevices = async () => {\n    if (!userId) {\n      setError('User ID is not available');\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:8082/api/user_device/${userId}/owned_devices`);\n      setDevices(response.data);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch devices');\n    }\n  };\n  const fetchConsumptionData = async device => {\n    // Dacă dispozitivul e deja selectat, atunci închidem graficul\n    if ((selectedDevice === null || selectedDevice === void 0 ? void 0 : selectedDevice.id) === device.id) {\n      setSelectedDevice(null);\n      setConsumptionData(null);\n      return;\n    }\n    try {\n      const response = await axios.get(`http://localhost:8086/api/measurements/historical`, {\n        params: {\n          deviceId: device.id\n        }\n      });\n      setSelectedDevice(device);\n      setConsumptionData(response.data);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch consumption data');\n    }\n  };\n  const NotificationCard = ({\n    deviceId,\n    hour,\n    consumption,\n    maxConsumption\n  }) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        minWidth: 275,\n        marginBottom: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: \"\\u26A0\\uFE0F ALERT! \\u26A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mb: 1.5\n          },\n          color: \"text.secondary\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Device ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), \" \", deviceId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mb: 1.5\n          },\n          color: \"text.secondary\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Hour:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), \" \", hour]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mb: 1.5\n          },\n          color: \"text.secondary\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Consumption:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), \" \", consumption, \" kWh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mb: 1.5\n          },\n          color: \"text.secondary\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Max allowed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), \" \", maxConsumption, \" kWh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          children: \"\\uD83D\\uDEA8 Threshold exceeded!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  };\n  let socketConnected = false;\n  let stompClient = null;\n  const connectToNotifications = () => {\n    if (websocketConnected) return; // Verificăm dacă conexiunea este deja activă\n\n    const socket = new SockJS('http://localhost:8086/websocket');\n    stompClient = Stomp.over(socket);\n    const sentNotifications = new Set(); // Keep track of sent notifications\n    let notifications = []; // List to store notifications\n\n    stompClient.connect({}, frame => {\n      setWebsocketConnected(true); // Setăm starea la true când conexiunea este stabilită\n      console.log('Connected: ' + frame);\n      stompClient.subscribe('/topic/notifications', notification => {\n        const message = notification.body;\n\n        // Extract notificationId, deviceId, hour, consumption, and maxConsumption from message\n        const notificationIdMatch = message.match(/Notification ID: (\\S+)/);\n        const deviceIdMatch = message.match(/deviceId: (\\d+)/);\n        const hourMatch = message.match(/Hour: (\\d+)/);\n        const consumptionMatch = message.match(/Consumption: (\\d+(\\.\\d+)?)/);\n        const maxConsumptionMatch = message.match(/Max allowed: (\\d+(\\.\\d+)?)/);\n        if (!notificationIdMatch || !deviceIdMatch || !hourMatch || !consumptionMatch || !maxConsumptionMatch) {\n          console.error(\"Some required data is missing in the message\");\n          return;\n        }\n        const notificationId = notificationIdMatch[1];\n        const deviceId = deviceIdMatch[1];\n        const hour = parseInt(hourMatch[1]); // Ensure it's an integer\n        const consumption = parseFloat(consumptionMatch[1]);\n        const maxConsumption = parseFloat(maxConsumptionMatch[1]);\n\n        // Check if notification has already been sent\n        if (sentNotifications.has(notificationId)) {\n          console.log(\"Duplicate notification detected: \", notificationId);\n          return; // Ignore if already sent\n        }\n\n        // Add notification to list\n        notifications.push({\n          notificationId,\n          deviceId,\n          hour,\n          consumption,\n          maxConsumption\n        });\n\n        // Mark notification as sent\n        sentNotifications.add(notificationId);\n\n        // Sort notifications by hour (ascending order)\n        notifications.sort((a, b) => a.hour - b.hour);\n\n        // Send notifications in order\n        notifications.forEach((notification, index) => {\n          // Send notification card\n          toast.info(/*#__PURE__*/_jsxDEV(NotificationCard, {\n            deviceId: notification.deviceId,\n            hour: notification.hour,\n            consumption: notification.consumption,\n            maxConsumption: notification.maxConsumption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 32\n          }, this), {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined\n          });\n\n          // If it's the last notification, clear the array\n          if (index === notifications.length - 1) {\n            // Clear notifications array after sending\n            notifications = [];\n          }\n        });\n      });\n    }, error => {\n      console.error(\"WebSocket connection failed:\", error);\n    });\n  };\n  useEffect(() => {\n    fetchDevices();\n    connectToNotifications();\n  }, [userId]);\n  const renderChart = () => {\n    if (!consumptionData || consumptionData.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No consumption data available for this device.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 70\n    }, this);\n    const scaleFactor = 1; // Factor de scalare\n    const hours = Array.from({\n      length: 24\n    }, (_, index) => index + 1);\n    const values = consumptionData.map(value => value / scaleFactor); // Reducem valorile\n\n    const data = {\n      labels: hours,\n      datasets: [{\n        label: 'Energy Consumption (kWh)',\n        data: values,\n        borderColor: 'rgba(75,192,192,1)',\n        backgroundColor: 'rgba(75,192,192,0.2)',\n        tension: 0.1\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: true,\n          position: 'top',\n          labels: {\n            font: {\n              size: 14 // Dimensiunea fontului în legendă\n            }\n          }\n        },\n        tooltip: {\n          callbacks: {\n            label: tooltipItem => `${tooltipItem.raw} kWh` // Adăugăm unitatea în tooltip\n          }\n        }\n      },\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: 'Hours of the Day',\n            // Titlul pentru axa X\n            font: {\n              size: 16\n            }\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: 'Energy Consumption (kWh)',\n            // Titlul pentru axa Y\n            font: {\n              size: 16\n            }\n          }\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Client Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleSignOut,\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"devices-title\",\n      children: \"Your Devices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), devices.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            padding: '10px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: device.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Max Consumption:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 40\n              }, this), \" \", device.consumption, \" kWh\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 40\n              }, this), \" \", device.address, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: (selectedDevice === null || selectedDevice === void 0 ? void 0 : selectedDevice.id) === device.id ? 'secondary' : 'primary',\n              onClick: () => fetchConsumptionData(device),\n              children: (selectedDevice === null || selectedDevice === void 0 ? void 0 : selectedDevice.id) === device.id ? 'Hide Consumption' : 'Show Consumption'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 29\n        }, this)\n      }, device.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No devices found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }, this), selectedDevice && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Consumption Data for: \", selectedDevice.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this), renderChart()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 9\n  }, this);\n};\n_s(ClientPage, \"kWQbefPs3y4LwH1CfL3rTkxzkTo=\", false, function () {\n  return [useNavigate];\n});\n_c = ClientPage;\nexport default ClientPage;\nvar _c;\n$RefreshReg$(_c, \"ClientPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","SockJS","Stomp","Typography","Button","Card","CardContent","Grid","Line","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","ClientPage","_s","devices","setDevices","selectedDevice","setSelectedDevice","consumptionData","setConsumptionData","error","setError","userId","localStorage","getItem","navigate","websocketConnected","setWebsocketConnected","handleSignOut","removeItem","fetchDevices","response","get","data","err","console","fetchConsumptionData","device","id","params","deviceId","NotificationCard","hour","consumption","maxConsumption","sx","minWidth","marginBottom","children","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","mb","color","socketConnected","stompClient","connectToNotifications","socket","over","sentNotifications","Set","notifications","connect","frame","log","subscribe","notification","message","body","notificationIdMatch","match","deviceIdMatch","hourMatch","consumptionMatch","maxConsumptionMatch","notificationId","parseInt","parseFloat","has","push","add","sort","a","b","forEach","index","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","length","renderChart","scaleFactor","hours","Array","from","_","values","map","value","labels","datasets","label","borderColor","backgroundColor","tension","options","responsive","plugins","legend","display","font","size","tooltip","callbacks","tooltipItem","raw","scales","x","title","text","y","className","style","onClick","container","spacing","item","xs","sm","md","padding","textAlign","description","address","marginTop","_c","$RefreshReg$"],"sources":["D:/DS2024_30645_Gradinariu_Robert_Assig1/ass-1-frontend/src/ClientPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './ClientStyle.css';\r\nimport axios from 'axios';\r\nimport SockJS from 'sockjs-client';\r\nimport { Stomp } from '@stomp/stompjs';\r\nimport { Typography,Button, Card, CardContent, Grid } from '@mui/material';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst ClientPage = () => {\r\n    const [devices, setDevices] = useState([]);\r\n    const [selectedDevice, setSelectedDevice] = useState(null);\r\n    const [consumptionData, setConsumptionData] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const userId = localStorage.getItem('userId');\r\n    const navigate = useNavigate();\r\n    const [websocketConnected, setWebsocketConnected] = useState(false);\r\n\r\n\r\n    const handleSignOut = () => {\r\n        localStorage.removeItem('role');\r\n        localStorage.removeItem('userId');\r\n        navigate('/');\r\n    };\r\n\r\n    const fetchDevices = async () => {\r\n        if (!userId) {\r\n            setError('User ID is not available');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.get(`http://localhost:8082/api/user_device/${userId}/owned_devices`);\r\n            setDevices(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to fetch devices');\r\n        }\r\n    };\r\n\r\n    const fetchConsumptionData = async (device) => {\r\n        // Dacă dispozitivul e deja selectat, atunci închidem graficul\r\n        if (selectedDevice?.id === device.id) {\r\n            setSelectedDevice(null);\r\n            setConsumptionData(null);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(`http://localhost:8086/api/measurements/historical`, {\r\n                params: { deviceId: device.id }\r\n            });\r\n            setSelectedDevice(device);\r\n            setConsumptionData(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to fetch consumption data');\r\n        }\r\n    };\r\n\r\n\r\n    const NotificationCard = ({ deviceId, hour, consumption, maxConsumption }) => {\r\n        return (\r\n            <Card sx={{ minWidth: 275, marginBottom: '10px' }}>\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"div\">\r\n                        ⚠️ ALERT! ⚡\r\n                    </Typography>\r\n                    <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                        <strong>Device ID:</strong> {deviceId}\r\n                    </Typography>\r\n                    <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                        <strong>Hour:</strong> {hour}\r\n                    </Typography>\r\n                    <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                        <strong>Consumption:</strong> {consumption} kWh\r\n                    </Typography>\r\n                    <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                        <strong>Max allowed:</strong> {maxConsumption} kWh\r\n                    </Typography>\r\n                    <Button variant=\"contained\" color=\"error\">\r\n                        🚨 Threshold exceeded!\r\n                    </Button>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    };\r\n\r\n    let socketConnected = false;\r\n    let stompClient = null;\r\n\r\n    const connectToNotifications = () => {\r\n        if (websocketConnected) return; // Verificăm dacă conexiunea este deja activă\r\n\r\n        const socket = new SockJS('http://localhost:8086/websocket');\r\n        stompClient = Stomp.over(socket);\r\n\r\n        const sentNotifications = new Set();  // Keep track of sent notifications\r\n        let notifications = [];  // List to store notifications\r\n\r\n        stompClient.connect({}, (frame) => {\r\n            setWebsocketConnected(true); // Setăm starea la true când conexiunea este stabilită\r\n            console.log('Connected: ' + frame);\r\n\r\n            stompClient.subscribe('/topic/notifications', (notification) => {\r\n                const message = notification.body;\r\n\r\n                // Extract notificationId, deviceId, hour, consumption, and maxConsumption from message\r\n                const notificationIdMatch = message.match(/Notification ID: (\\S+)/);\r\n                const deviceIdMatch = message.match(/deviceId: (\\d+)/);\r\n                const hourMatch = message.match(/Hour: (\\d+)/);\r\n                const consumptionMatch = message.match(/Consumption: (\\d+(\\.\\d+)?)/);\r\n                const maxConsumptionMatch = message.match(/Max allowed: (\\d+(\\.\\d+)?)/);\r\n\r\n                if (!notificationIdMatch || !deviceIdMatch || !hourMatch || !consumptionMatch || !maxConsumptionMatch) {\r\n                    console.error(\"Some required data is missing in the message\");\r\n                    return;\r\n                }\r\n\r\n                const notificationId = notificationIdMatch[1];\r\n                const deviceId = deviceIdMatch[1];\r\n                const hour = parseInt(hourMatch[1]);  // Ensure it's an integer\r\n                const consumption = parseFloat(consumptionMatch[1]);\r\n                const maxConsumption = parseFloat(maxConsumptionMatch[1]);\r\n\r\n                // Check if notification has already been sent\r\n                if (sentNotifications.has(notificationId)) {\r\n                    console.log(\"Duplicate notification detected: \", notificationId);\r\n                    return;  // Ignore if already sent\r\n                }\r\n\r\n                // Add notification to list\r\n                notifications.push({\r\n                    notificationId,\r\n                    deviceId,\r\n                    hour,\r\n                    consumption,\r\n                    maxConsumption\r\n                });\r\n\r\n                // Mark notification as sent\r\n                sentNotifications.add(notificationId);\r\n\r\n                // Sort notifications by hour (ascending order)\r\n                notifications.sort((a, b) => a.hour - b.hour);\r\n\r\n                // Send notifications in order\r\n                notifications.forEach((notification, index) => {\r\n                    // Send notification card\r\n                    toast.info(<NotificationCard\r\n                        deviceId={notification.deviceId}\r\n                        hour={notification.hour}\r\n                        consumption={notification.consumption}\r\n                        maxConsumption={notification.maxConsumption} />, {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n\r\n                    // If it's the last notification, clear the array\r\n                    if (index === notifications.length - 1) {\r\n                        // Clear notifications array after sending\r\n                        notifications = [];\r\n                    }\r\n                });\r\n            });\r\n        }, (error) => {\r\n            console.error(\"WebSocket connection failed:\", error);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDevices();\r\n        connectToNotifications();\r\n    }, [userId]);\r\n\r\n    const renderChart = () => {\r\n        if (!consumptionData || consumptionData.length === 0) return <p>No consumption data available for this device.</p>;\r\n\r\n        const scaleFactor = 1; // Factor de scalare\r\n        const hours = Array.from({ length: 24 }, (_, index) => index + 1);\r\n        const values = consumptionData.map(value => value / scaleFactor); // Reducem valorile\r\n\r\n        const data = {\r\n            labels: hours,\r\n            datasets: [\r\n                {\r\n                    label: 'Energy Consumption (kWh)',\r\n                    data: values,\r\n                    borderColor: 'rgba(75,192,192,1)',\r\n                    backgroundColor: 'rgba(75,192,192,0.2)',\r\n                    tension: 0.1,\r\n                },\r\n            ],\r\n        };\r\n\r\n        const options = {\r\n            responsive: true,\r\n            plugins: {\r\n                legend: {\r\n                    display: true,\r\n                    position: 'top',\r\n                    labels: {\r\n                        font: {\r\n                            size: 14, // Dimensiunea fontului în legendă\r\n                        },\r\n                    },\r\n                },\r\n                tooltip: {\r\n                    callbacks: {\r\n                        label: (tooltipItem) =>\r\n                            `${tooltipItem.raw} kWh`, // Adăugăm unitatea în tooltip\r\n                    },\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Hours of the Day', // Titlul pentru axa X\r\n                        font: {\r\n                            size: 16,\r\n                        },\r\n                    },\r\n                },\r\n                y: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Energy Consumption (kWh)', // Titlul pentru axa Y\r\n                        font: {\r\n                            size: 16,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        };\r\n\r\n        return <Line data={data} options={options} />;    };\r\n\r\n    return (\r\n        <div className=\"client-dashboard\">\r\n            <h2>Client Dashboard</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleSignOut} style={{ marginBottom: '20px' }}>\r\n                Sign Out\r\n            </Button>\r\n\r\n            <h3 className=\"devices-title\">Your Devices</h3>\r\n            {devices.length > 0 ? (\r\n                <Grid container spacing={3}>\r\n                    {devices.map((device) => (\r\n                        <Grid item xs={12} sm={6} md={4} key={device.id}>\r\n                            <Card style={{ padding: '10px', textAlign: 'center' }}>\r\n                                <CardContent>\r\n                                    <h4>{device.description}</h4>\r\n                                    <p><strong>Max Consumption:</strong> {device.consumption} kWh</p>\r\n                                    <p><strong>Address:</strong> {device.address} </p>\r\n\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color={selectedDevice?.id === device.id ? 'secondary' : 'primary'}\r\n                                        onClick={() => fetchConsumptionData(device)}\r\n                                    >\r\n                                        {selectedDevice?.id === device.id ? 'Hide Consumption' : 'Show Consumption'}\r\n                                    </Button>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            ) : (\r\n                <p>No devices found.</p>\r\n            )}\r\n\r\n            {selectedDevice && (\r\n                <div style={{ marginTop: '30px' }}>\r\n                    <h3>Consumption Data for: {selectedDevice.description}</h3>\r\n                    {renderChart()}\r\n                </div>\r\n            )}\r\n\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClientPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}