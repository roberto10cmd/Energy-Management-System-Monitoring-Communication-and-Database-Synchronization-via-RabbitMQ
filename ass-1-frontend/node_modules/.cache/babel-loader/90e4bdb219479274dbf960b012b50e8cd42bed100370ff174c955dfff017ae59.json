{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robert\\\\WebstormProjects\\\\untitled\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './AdminStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [clients, setClients] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: '',\n    password: '',\n    role: 'client'\n  });\n  const [error, setError] = useState('');\n  const [expandedClientId, setExpandedClientId] = useState(null);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [showDeviceForm, setShowDeviceForm] = useState({}); // Obiect pentru a controla starea formularelor de dispozitive\n  const [message, setMessage] = useState(''); // Pentru a afișa mesajul de succes sau eroare\n  const [updatedUser, setUpdatedUser] = useState({\n    name: '',\n    email: '',\n    username: '',\n    role: ''\n  }); // Datele de actualizare\n  const [showUpdateForm, setShowUpdateForm] = useState({}); // Controlează afisarea formularului de actualizare\n  const [newDevice, setNewDevice] = useState({\n    address: '',\n    consumption: '',\n    description: ''\n  });\n  useEffect(() => {\n    const userRole = localStorage.getItem('role');\n    if (userRole !== 'admin') {\n      alert('You do not have access to this page!');\n      navigate('/client'); // Redirecționează clientul la pagina lui\n    } else {\n      fetchClients();\n    }\n  }, [navigate]);\n  const toggleExpandClient = clientId => {\n    setExpandedClientId(expandedClientId === clientId ? null : clientId);\n  };\n  const toggleUpdateForm = (e, client) => {\n    e.stopPropagation();\n    setShowUpdateForm(prev => ({\n      ...prev,\n      [client.id]: !prev[client.id]\n    }));\n    setUpdatedUser({\n      name: client.name,\n      email: client.email,\n      username: client.username,\n      role: client.role\n    });\n    setSelectedUserId(client.id);\n  };\n\n  // Funcția pentru a crea un dispozitiv\n  const handleAddDevice = async (e, userId) => {\n    e.preventDefault(); // Previne reîncărcarea paginii\n    try {\n      const response = await axios.post('http://localhost:8083/api/user_device/insert', {\n        ...newDevice,\n        userId: userId // Aici folosești userId-ul clientului selectat\n      });\n      console.log(response.data); // Afișează mesajul de succes\n\n      // Setează mesajul de succes\n      setMessage('Device added successfully!');\n\n      // Resetează formularul\n      setNewDevice({\n        address: '',\n        consumption: '',\n        description: ''\n      });\n\n      // Oprește afișarea mesajului după câteva secunde\n      setTimeout(() => {\n        setMessage('');\n      }, 3000); // După 3 secunde\n    } catch (error) {\n      console.error('Error adding device:', error);\n\n      // Setează mesajul de eroare\n      setMessage('Failed to add device. Please try again.');\n\n      // Oprește afișarea mesajului după câteva secunde\n      setTimeout(() => {\n        setMessage('');\n      }, 3000); // După 3 secunde\n    }\n  };\n  const handleUpdateUser = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`http://localhost:8084/api/users/${selectedUserId}`, updatedUser);\n      console.log(response.data);\n      setMessage('User updated successfully!');\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n      fetchClients();\n    } catch (error) {\n      console.error('Error updating user:', error);\n      setMessage('Failed to update user. Please try again.');\n      setTimeout(() => {\n        setMessage('');\n      }, 3000);\n    }\n  };\n  const handleUserSelect = userId => {\n    setSelectedUserId(userId); // Salvează ID-ul utilizatorului selectat\n  };\n  const handleDeleteUser = async id => {\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\n      try {\n        await axios.delete(`http://localhost:8084/api/users/${id}`);\n        fetchClients(); // Reîncarcă lista de utilizatori\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        setError('Failed to delete user');\n      }\n    }\n  };\n  const fetchClients = async () => {\n    try {\n      const response = await axios.get('http://localhost:8084/api/users'); // API pentru a obține utilizatorii\n      setClients(response.data);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch clients');\n    }\n  };\n  const handleAddUser = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8084/api/users/insert', newUser); // API pentru a adăuga utilizatori\n      setNewUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      });\n      fetchClients(); // Reîncarcă lista după adăugare\n      setNewUser({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        role: 'client'\n      }); // Resetează formularul\n    } catch (err) {\n      console.error(err);\n      setError('Failed to add user');\n    }\n  };\n  const toggleDeviceForm = (e, userId) => {\n    e.stopPropagation(); // Oprește propagarea evenimentului de click\n    setSelectedUserId(userId); // Setează userId pentru utilizatorul curent\n    setShowDeviceForm(prev => ({\n      ...prev,\n      [userId]: !prev[userId]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Client List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), clients.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: clients.map(client => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => toggleExpandClient(client.id),\n            children: client.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this), expandedClientId === client.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"client-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Id: \", client.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Username: \", client.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", client.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => toggleUpdateForm(e, client),\n              className: \"update-button\",\n              children: showUpdateForm[client.id] ? 'Hide Update Form' : 'Update User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 41\n            }, this), showUpdateForm[client.id] && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUpdateUser,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Name\",\n                value: updatedUser.name,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  name: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                value: updatedUser.email,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  email: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Username\",\n                value: updatedUser.username,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  username: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: updatedUser.role,\n                onChange: e => setUpdatedUser({\n                  ...updatedUser,\n                  role: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"client\",\n                  children: \"Client\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"admin\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Update User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handleAddDevice(e, client.id),\n              className: \"toggle-device-button\",\n              children: showDeviceForm[client.id] ? 'Hide Device Form' : 'Add Device'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 37\n          }, this)]\n        }, client.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No clients found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddUser,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: newUser.name,\n          onChange: e => setNewUser({\n            ...newUser,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email\",\n          value: newUser.email,\n          onChange: e => setNewUser({\n            ...newUser,\n            email: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: newUser.username,\n          onChange: e => setNewUser({\n            ...newUser,\n            username: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: newUser.password,\n          onChange: e => setNewUser({\n            ...newUser,\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newUser.role,\n          onChange: e => setNewUser({\n            ...newUser,\n            role: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"client\",\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"S6WxRCCrkYPuCRg9sZdTA1/VnJo=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","AdminPage","_s","navigate","clients","setClients","newUser","setNewUser","username","password","role","error","setError","expandedClientId","setExpandedClientId","selectedUserId","setSelectedUserId","showDeviceForm","setShowDeviceForm","message","setMessage","updatedUser","setUpdatedUser","name","email","showUpdateForm","setShowUpdateForm","newDevice","setNewDevice","address","consumption","description","userRole","localStorage","getItem","alert","fetchClients","toggleExpandClient","clientId","toggleUpdateForm","e","client","stopPropagation","prev","id","handleAddDevice","userId","preventDefault","response","post","console","log","data","setTimeout","handleUpdateUser","put","handleUserSelect","handleDeleteUser","window","confirm","delete","get","err","handleAddUser","toggleDeviceForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","cursor","onClick","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/robert/WebstormProjects/untitled/src/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './AdminStyle.css';\r\nconst AdminPage = () => {\r\n    const navigate = useNavigate();\r\n    const [clients, setClients] = useState([]);\r\n    const [newUser, setNewUser] = useState({ username: '', password: '', role: 'client' });\r\n    const [error, setError] = useState('');\r\n    const [expandedClientId, setExpandedClientId] = useState(null);\r\n    const [selectedUserId, setSelectedUserId] = useState(null);\r\n    const [showDeviceForm, setShowDeviceForm] = useState({}); // Obiect pentru a controla starea formularelor de dispozitive\r\n    const [message, setMessage] = useState(''); // Pentru a afișa mesajul de succes sau eroare\r\n    const [updatedUser, setUpdatedUser] = useState({ name: '', email: '', username: '', role: '' }); // Datele de actualizare\r\n    const [showUpdateForm, setShowUpdateForm] = useState({}); // Controlează afisarea formularului de actualizare\r\n    const [newDevice, setNewDevice] = useState({address: '', consumption: '', description: '',});\r\n\r\n\r\n    useEffect(() => {\r\n        const userRole = localStorage.getItem('role');\r\n        if (userRole !== 'admin') {\r\n            alert('You do not have access to this page!');\r\n            navigate('/client'); // Redirecționează clientul la pagina lui\r\n        }else{\r\n            fetchClients();\r\n        }\r\n    }, [navigate]);\r\n\r\n    const toggleExpandClient = (clientId) => {\r\n        setExpandedClientId(expandedClientId === clientId ? null : clientId);\r\n    };\r\n\r\n    const toggleUpdateForm = (e, client) => {\r\n        e.stopPropagation();\r\n        setShowUpdateForm((prev) => ({ ...prev, [client.id]: !prev[client.id] }));\r\n        setUpdatedUser({\r\n            name: client.name,\r\n            email: client.email,\r\n            username: client.username,\r\n            role: client.role\r\n        });\r\n        setSelectedUserId(client.id);\r\n    };\r\n\r\n    // Funcția pentru a crea un dispozitiv\r\n    const handleAddDevice = async (e, userId) => {\r\n        e.preventDefault(); // Previne reîncărcarea paginii\r\n        try {\r\n            const response = await axios.post('http://localhost:8083/api/user_device/insert', {\r\n                ...newDevice,\r\n                userId: userId // Aici folosești userId-ul clientului selectat\r\n            });\r\n            console.log(response.data); // Afișează mesajul de succes\r\n\r\n            // Setează mesajul de succes\r\n            setMessage('Device added successfully!');\r\n\r\n            // Resetează formularul\r\n            setNewDevice({ address: '', consumption: '', description: '' });\r\n\r\n            // Oprește afișarea mesajului după câteva secunde\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000); // După 3 secunde\r\n        } catch (error) {\r\n            console.error('Error adding device:', error);\r\n\r\n            // Setează mesajul de eroare\r\n            setMessage('Failed to add device. Please try again.');\r\n\r\n            // Oprește afișarea mesajului după câteva secunde\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000); // După 3 secunde\r\n        }\r\n    };\r\n\r\n    const handleUpdateUser = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.put(`http://localhost:8084/api/users/${selectedUserId}`, updatedUser);\r\n            console.log(response.data);\r\n            setMessage('User updated successfully!');\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000);\r\n            fetchClients();\r\n        } catch (error) {\r\n            console.error('Error updating user:', error);\r\n            setMessage('Failed to update user. Please try again.');\r\n            setTimeout(() => {\r\n                setMessage('');\r\n            }, 3000);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleUserSelect = (userId) => {\r\n        setSelectedUserId(userId); // Salvează ID-ul utilizatorului selectat\r\n    };\r\n\r\n    const handleDeleteUser = async (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n            try {\r\n                await axios.delete(`http://localhost:8084/api/users/${id}`);\r\n                fetchClients(); // Reîncarcă lista de utilizatori\r\n            } catch (error) {\r\n                console.error('Error deleting user:', error);\r\n                setError('Failed to delete user');\r\n            }\r\n        }\r\n    };\r\n\r\n    const fetchClients = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8084/api/users'); // API pentru a obține utilizatorii\r\n            setClients(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to fetch clients');\r\n        }\r\n    };\r\n    const handleAddUser = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:8084/api/users/insert', newUser); // API pentru a adăuga utilizatori\r\n            setNewUser({\r\n                name:'',\r\n                email:'',\r\n                username:'',\r\n                password:'',\r\n                role:'client'\r\n            });\r\n            fetchClients(); // Reîncarcă lista după adăugare\r\n            setNewUser({ name:'',email:'',username: '', password: '', role: 'client' }); // Resetează formularul\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to add user');\r\n        }\r\n    };\r\n\r\n\r\n    const toggleDeviceForm = (e, userId) => {\r\n        e.stopPropagation(); // Oprește propagarea evenimentului de click\r\n        setSelectedUserId(userId); // Setează userId pentru utilizatorul curent\r\n        setShowDeviceForm((prev) => ({ ...prev, [userId]: !prev[userId] }));\r\n    };\r\n    return (\r\n        <div className=\"admin-container\">\r\n            <h2>Admin Dashboard</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n            <div className=\"section\">\r\n                <h3>Client List</h3>\r\n                {clients.length > 0 ? (\r\n                    <ul>\r\n                        {clients.map(client => (\r\n                            <li key={client.id} style={{ cursor: 'pointer' }}>\r\n                                <div onClick={() => toggleExpandClient(client.id)}>\r\n                                    {client.name}\r\n                                </div>\r\n\r\n                                {expandedClientId === client.id && (\r\n                                    <div className=\"client-details\">\r\n                                        <p>Id: {client.id}</p>\r\n                                        <p>Username: {client.username}</p>\r\n                                        <p>Email: {client.email}</p>\r\n\r\n                                        <button\r\n                                            onClick={(e) => toggleUpdateForm(e, client)}\r\n                                            className=\"update-button\"\r\n                                        >\r\n                                            {showUpdateForm[client.id] ? 'Hide Update Form' : 'Update User'}\r\n                                        </button>\r\n\r\n                                        {showUpdateForm[client.id] && (\r\n                                            <form onSubmit={handleUpdateUser}>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Name\"\r\n                                                    value={updatedUser.name}\r\n                                                    onChange={(e) => setUpdatedUser({ ...updatedUser, name: e.target.value })}\r\n                                                    required\r\n                                                />\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    value={updatedUser.email}\r\n                                                    onChange={(e) => setUpdatedUser({ ...updatedUser, email: e.target.value })}\r\n                                                    required\r\n                                                />\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Username\"\r\n                                                    value={updatedUser.username}\r\n                                                    onChange={(e) => setUpdatedUser({ ...updatedUser, username: e.target.value })}\r\n                                                    required\r\n                                                />\r\n                                                <select\r\n                                                    value={updatedUser.role}\r\n                                                    onChange={(e) => setUpdatedUser({ ...updatedUser, role: e.target.value })}\r\n                                                >\r\n                                                    <option value=\"client\">Client</option>\r\n                                                    <option value=\"admin\">Admin</option>\r\n                                                </select>\r\n                                                <button type=\"submit\">Update User</button>\r\n                                            </form>\r\n                                        )}\r\n\r\n                                        <button\r\n                                            onClick={(e) => handleAddDevice(e, client.id)}\r\n                                            className=\"toggle-device-button\"\r\n                                        >\r\n                                            {showDeviceForm[client.id] ? 'Hide Device Form' : 'Add Device'}\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>No clients found.</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Secțiunea 2: Adăugare Utilizator */}\r\n            <div className=\"section\">\r\n                <h3>Add User</h3>\r\n                <form onSubmit={handleAddUser}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        value={newUser.name}\r\n                        onChange={(e) => setNewUser({...newUser, name: e.target.value})}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        value={newUser.email}\r\n                        onChange={(e) => setNewUser({...newUser, email: e.target.value})}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        value={newUser.username}\r\n                        onChange={(e) => setNewUser({...newUser, username: e.target.value})}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={newUser.password}\r\n                        onChange={(e) => setNewUser({...newUser, password: e.target.value})}\r\n                        required\r\n                    />\r\n                    <select\r\n                        value={newUser.role}\r\n                        onChange={(e) => setNewUser({...newUser, role: e.target.value})}\r\n                    >\r\n                        <option value=\"client\">Client</option>\r\n                        <option value=\"admin\">Admin</option>\r\n                    </select>\r\n                    <button type=\"submit\">Add User</button>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}