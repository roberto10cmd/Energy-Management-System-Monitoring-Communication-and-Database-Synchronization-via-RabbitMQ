{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robert\\\\WebstormProjects\\\\untitled\\\\src\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './AdminStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [clients, setClients] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: '',\n    password: '',\n    role: 'client'\n  });\n  const [error, setError] = useState('');\n  const [expandedClientId, setExpandedClientId] = useState(null);\n  useEffect(() => {\n    const userRole = localStorage.getItem('role');\n    if (userRole !== 'admin') {\n      alert('You do not have access to this page!');\n      navigate('/client'); // Redirecționează clientul la pagina lui\n    } else {\n      fetchClients();\n    }\n  }, [navigate]);\n  const toggleExpandClient = id => {\n    setExpandedClientId(expandedClientId === id ? null : id);\n  };\n  const fetchClients = async () => {\n    try {\n      const response = await axios.get('http://localhost:8084/api/users'); // API pentru a obține utilizatorii\n      setClients(response.data);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch clients');\n    }\n  };\n  const handleAddUser = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8084/api/insert', newUser); // API pentru a adăuga utilizatori\n      fetchClients(); // Reîncarcă lista după adăugare\n      setNewUser({\n        username: '',\n        password: '',\n        role: 'client'\n      }); // Resetează formularul\n    } catch (err) {\n      console.error(err);\n      setError('Failed to add user');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Client List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this), clients.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clients.map(client => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => toggleExpandClient(client.id),\n        style: {\n          cursor: 'pointer'\n        } // Schimbă cursorul pentru a indica că elementul este interactiv\n        ,\n        children: [client.name, \" - \", client.username, \" - \", client.role, expandedClientId === client.id &&\n        /*#__PURE__*/\n        // Verifică dacă clientul este expus\n        _jsxDEV(\"div\", {\n          className: \"client-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", client.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Password: \", client.password]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }, this)]\n      }, client.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No clients found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"YHZJdU0bmhQUF+Ldofr/RVkcBiQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","AdminPage","_s","navigate","clients","setClients","newUser","setNewUser","username","password","role","error","setError","expandedClientId","setExpandedClientId","userRole","localStorage","getItem","alert","fetchClients","toggleExpandClient","id","response","get","data","err","console","handleAddUser","e","preventDefault","post","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","client","onClick","cursor","name","email","_c","$RefreshReg$"],"sources":["C:/Users/robert/WebstormProjects/untitled/src/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './AdminStyle.css';\r\nconst AdminPage = () => {\r\n    const navigate = useNavigate();\r\n    const [clients, setClients] = useState([]);\r\n    const [newUser, setNewUser] = useState({ username: '', password: '', role: 'client' });\r\n    const [error, setError] = useState('');\r\n    const [expandedClientId, setExpandedClientId] = useState(null);\r\n    useEffect(() => {\r\n        const userRole = localStorage.getItem('role');\r\n        if (userRole !== 'admin') {\r\n            alert('You do not have access to this page!');\r\n            navigate('/client'); // Redirecționează clientul la pagina lui\r\n        }else{\r\n            fetchClients();\r\n        }\r\n    }, [navigate]);\r\n\r\n    const toggleExpandClient = (id) => {\r\n        setExpandedClientId(expandedClientId===id ? null : id);\r\n    }\r\n\r\n    const fetchClients = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8084/api/users'); // API pentru a obține utilizatorii\r\n            setClients(response.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to fetch clients');\r\n        }\r\n    };\r\n    const handleAddUser = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:8084/api/insert', newUser); // API pentru a adăuga utilizatori\r\n            fetchClients(); // Reîncarcă lista după adăugare\r\n            setNewUser({ username: '', password: '', role: 'client' }); // Resetează formularul\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to add user');\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"section\">\r\n            <h3>Client List</h3>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {clients.length > 0 ? (\r\n                <ul>\r\n                    {clients.map(client => (\r\n                        <li\r\n                            key={client.id}\r\n                            onClick={() => toggleExpandClient(client.id)}\r\n                            style={{ cursor: 'pointer' }} // Schimbă cursorul pentru a indica că elementul este interactiv\r\n                        >\r\n                            {client.name} - {client.username} - {client.role}\r\n                            {expandedClientId === client.id && ( // Verifică dacă clientul este expus\r\n                                <div className=\"client-details\">\r\n                                    <p>Email: {client.email}</p>\r\n                                    <p>Password: {client.password}</p> {/* Fii atent, nu ar trebui să afișezi parola */}\r\n                                </div>\r\n                            )}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>No clients found.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}